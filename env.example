# Base URL for AccelByte environment; REQUIRED
AB_BASE_URL=https://yourgame.accelbyte.io


# OAuth Configuration
# OAUTH_CLIENT_ID=
# OAUTH_CLIENT_SECRET=
#
# Client Credentials Flow:
# If OAUTH_CLIENT_ID is configured and no access token is provided in the request,
# the server can automatically use the OAuth2 client credentials flow to obtain
# an access token. The token will be cached and automatically refreshed when it expires.
# This is useful for server-to-server authentication without requiring user interaction.
# The client secret can be an empty string if not required by your OAuth provider.

## THE REST OF THE ENV IS ALSO OPTIONAL IN MOST CASES
#
# OIDC Configuration (optional - defaults derived from AB_BASE_URL)
# OAUTH_AUTHORIZATION_URL=https://yourgame.accelbyte.io/iam/v3/oauth/authorize
# OAUTH_TOKEN_URL=https://yourgame.accelbyte.io/iam/v3/oauth/token
# JWKS_URI=https://yourgame.accelbyte.io/iam/v3/oauth/jwks
# In shared cloud environment, JWT_ISSUER could be different from your AB_BASE_URL (e.g. https://prod.gamingservices.accelbyte.io)
# JWT_ISSUER=https://yourgame.accelbyte.io

# Server Configuration
# PORT=3000
# NODE_ENV=development

# Transport Configuration
# TRANSPORT=stdio
# Set to 'stdio' (default) to run the server in stdio mode only (for MCP clients that communicate via stdin/stdout)
# Set to 'http' to run the server in HTTP mode only
# In stdio mode, all logs are redirected to stderr to avoid interfering with the MCP protocol on stdout

# Logging Configuration
# LOG_LEVEL=info
