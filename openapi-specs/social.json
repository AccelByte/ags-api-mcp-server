{
  "info": {
    "contact": {
      "email": "engineering@accelbyte.io",
      "name": "Engineering Team at AccelByte",
      "url": "https://accelbyte.io"
    },
    "description": "Justice Statistics Service",
    "title": "justice-statistics-service",
    "version": "4.0.0"
  },
  "schemes": [
    "https"
  ],
  "tags": [
    {
      "name": "GameProfile (Deprecated)"
    },
    {
      "name": "GlobalStatistic"
    },
    {
      "name": "Slot (Deprecated)"
    },
    {
      "name": "SlotConfig (Deprecated)"
    },
    {
      "name": "StatConfiguration"
    },
    {
      "name": "StatCycleConfiguration"
    },
    {
      "name": "UserStatistic"
    },
    {
      "name": "UserStatisticCycle"
    }
  ],
  "securityDefinitions": {
    "authorization": {
      "in": "header",
      "name": "Authorization",
      "type": "apiKey"
    }
  },
  "swagger": "2.0",
  "paths": {
    "/social/v1/admin/namespaces/{namespace}/globalstatitems": {
      "get": {
        "description": "List global statItems by pagination.&lt;br&gt;",
        "operationId": "getGlobalStatItems",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "default": 20,
            "format": "int32",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "default": 0,
            "format": "int32",
            "in": "query",
            "name": "offset",
            "required": false,
            "type": "integer"
          },
          {
            "description": "comma separated stat codes",
            "in": "query",
            "name": "statCodes",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/GlobalStatItemPagingSlicedResult"
            }
          },
          "401": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20001</td><td>Unauthorized</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "403": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20013</td><td>insufficient permission</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "500": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20000</td><td>Internal server error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "List global statItems",
        "tags": [
          "GlobalStatistic"
        ],
        "x-errorCodes": {
          "20000": "Internal server error",
          "20001": "Unauthorized",
          "20013": "insufficient permission"
        },
        "x-security": {
          "userPermissions": "ADMIN:NAMESPACE:{namespace}:STATITEM [READ]"
        }
      }
    },
    "/social/v1/admin/namespaces/{namespace}/globalstatitems/{statCode}": {
      "get": {
        "description": "Get global statItem by stat code.&lt;br&gt;Other detail info:&lt;ul&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: global stat item&lt;/li&gt;&lt;/ul&gt;",
        "operationId": "getGlobalStatItemByStatCode",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "stat Code",
            "in": "path",
            "name": "statCode",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/GlobalStatItemInfo"
            }
          },
          "401": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20001</td><td>Unauthorized</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "403": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20013</td><td>insufficient permission</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "404": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>12244</td><td>Global stat item of [{statCode}] cannot be found in namespace [{namespace}]</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "500": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20000</td><td>Internal server error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "Get global statItem by stat code",
        "tags": [
          "GlobalStatistic"
        ],
        "x-errorCodes": {
          "12244": "Global stat item of [{statCode}] cannot be found in namespace [{namespace}]",
          "20000": "Internal server error",
          "20001": "Unauthorized",
          "20013": "insufficient permission"
        },
        "x-security": {
          "userPermissions": "ADMIN:NAMESPACE:{namespace}:STATITEM [READ]"
        }
      }
    },
    "/social/v1/admin/namespaces/{namespace}/statCycles": {
      "get": {
        "description": "List stat cycles by pagination.&lt;br&gt;Other detail info:&lt;ul&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: stat cycles&lt;/li&gt;&lt;/ul&gt;",
        "operationId": "getStatCycles",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "enum": [
              "ANNUALLY",
              "DAILY",
              "MONTHLY",
              "SEASONAL",
              "WEEKLY"
            ],
            "in": "query",
            "name": "cycleType",
            "required": false,
            "type": "string"
          },
          {
            "default": 20,
            "format": "int32",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "name",
            "in": "query",
            "name": "name",
            "required": false,
            "type": "string"
          },
          {
            "default": 0,
            "format": "int32",
            "in": "query",
            "name": "offset",
            "required": false,
            "type": "integer"
          },
          {
            "description": "default is unsorted, allow values: [start, start:asc, start:desc, createdAt, createdAt:asc, createdAt:desc, updatedAt, updatedAt:asc, updatedAt:desc],and support sort group, eg: sortBy=start:asc,createdAt:desc.",
            "in": "query",
            "name": "sortBy",
            "required": false,
            "type": "string"
          },
          {
            "enum": [
              "ACTIVE",
              "INIT",
              "STOPPED"
            ],
            "in": "query",
            "name": "status",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/StatCyclePagingSlicedResult"
            }
          },
          "401": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20001</td><td>Unauthorized</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "403": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20013</td><td>insufficient permission</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "500": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20000</td><td>Internal server error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "List stat cycles",
        "tags": [
          "StatCycleConfiguration"
        ],
        "x-errorCodes": {
          "20000": "Internal server error",
          "20001": "Unauthorized",
          "20013": "insufficient permission"
        },
        "x-security": {
          "userPermissions": "ADMIN:NAMESPACE:{namespace}:STAT [READ]"
        }
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Create stat cycle.&lt;br&gt;Fields:&lt;ul&gt;&lt;li&gt;id: Cycle id, consist of alphanumeric characters with a maximum of 32 characters. if not provided will be generated. &lt;b&gt;(optional)&lt;/b&gt;.&lt;/li&gt;&lt;li&gt;name: Cycle name, maximum length is 128 characters. &lt;b&gt;(required)&lt;/b&gt;.&lt;/li&gt;&lt;li&gt;resetTime: Reset time must follow &lt;b&gt;hours:minutes&lt;/b&gt; in 24 hours format e.g. 01:30, 23:15. &lt;b&gt;(required)&lt;/b&gt;&lt;/li&gt;&lt;li&gt;resetDay: Reset Day follows the ISO-8601 standard, from 1 (Monday) to 7 (Sunday). Required when cycleType is WEEKLY.&lt;/li&gt;&lt;li&gt;resetDate: Reset Date must be a number 1 - 31. Required when cycleType is MONTHLY or ANNUALLY.&lt;/li&gt;&lt;li&gt;resetMonth: Reset Month must be a number 1 - 12. Required when cycleType is ANNUALLY.&lt;/li&gt;&lt;li&gt;seasonPeriod: Season period must be a number greater than or equal to 1 (days). Required when cycleType is SEASONAL.&lt;/li&gt;&lt;li&gt;start: Start time must follow RFC3339 standard. e.g. 2023-02-24T05:10:24.865Z. &lt;b&gt;(required)&lt;/b&gt;&lt;/li&gt;&lt;li&gt;end: End time must follow RFC3339 standard. e.g. 2023-02-24T05:10:24.865Z.&lt;/li&gt;&lt;/ul&gt;Other detail info:&lt;ul&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: created stat cycle&lt;/li&gt;&lt;/ul&gt;",
        "operationId": "createStatCycle",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StatCycleCreate"
            }
          },
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/StatCycleInfo"
            }
          },
          "400": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>12225</td><td>Invalid time range</td></tr><tr><td>12226</td><td>Invalid date [{date}] of month [{month}]</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "401": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20001</td><td>Unauthorized</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "403": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20013</td><td>insufficient permission</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "409": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>12274</td><td>Stat cycle with id [{id}] already exists in namespace [{namespace}]</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "422": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20002</td><td>validation error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ValidationErrorEntity"
            }
          },
          "500": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20000</td><td>Internal server error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "Create stat cycle",
        "tags": [
          "StatCycleConfiguration"
        ],
        "x-errorCodes": {
          "12225": "Invalid time range",
          "12226": "Invalid date [{date}] of month [{month}]",
          "12274": "Stat cycle with id [{id}] already exists in namespace [{namespace}]",
          "20000": "Internal server error",
          "20001": "Unauthorized",
          "20002": "validation error",
          "20013": "insufficient permission"
        },
        "x-security": {
          "userPermissions": "ADMIN:NAMESPACE:{namespace}:STAT [CREATE]"
        }
      }
    },
    "/social/v1/admin/namespaces/{namespace}/statCycles/bulk": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Bulk get stat cycle.&lt;br&gt;Other detail info:&lt;ul&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: list of stat cycles&lt;/li&gt;&lt;/ul&gt;",
        "operationId": "bulkGetStatCycle",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BulkStatCycleRequest"
            }
          },
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/BulkStatCycleResult"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "401": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20001</td><td>Unauthorized</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "403": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20013</td><td>insufficient permission</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "422": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20002</td><td>validation error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ValidationErrorEntity"
            }
          },
          "500": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20000</td><td>Internal server error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "Bulk get stat cycle",
        "tags": [
          "StatCycleConfiguration"
        ],
        "x-errorCodes": {
          "20000": "Internal server error",
          "20001": "Unauthorized",
          "20002": "validation error",
          "20013": "insufficient permission"
        },
        "x-security": {
          "userPermissions": "ADMIN:NAMESPACE:{namespace}:STAT [READ]"
        }
      }
    },
    "/social/v1/admin/namespaces/{namespace}/statCycles/export": {
      "get": {
        "description": "Export all stat cycle configurations for a given namespace into file  At current, only JSON file is supported.&lt;p&gt;",
        "operationId": "exportStatCycle",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful export of stat cycle configs",
            "schema": {
              "type": "file"
            }
          },
          "401": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20001</td><td>Unauthorized</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "403": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20013</td><td>insufficient permission</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "500": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20000</td><td>Internal server error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "Export all stat cycle configurations",
        "tags": [
          "StatCycleConfiguration"
        ],
        "x-errorCodes": {
          "20000": "Internal server error",
          "20001": "Unauthorized",
          "20013": "insufficient permission"
        },
        "x-security": {
          "userPermissions": "ADMIN:NAMESPACE:{namespace}:STAT [READ]"
        }
      }
    },
    "/social/v1/admin/namespaces/{namespace}/statCycles/import": {
      "post": {
        "consumes": [
          "multipart/form-data"
        ],
        "description": "Import stat cycle configurations for a given namespace from file. At current, only JSON file is supported.&lt;p&gt;",
        "operationId": "importStatCycle",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "name": "file",
            "required": false,
            "type": "file"
          },
          {
            "description": "replaceExisting",
            "in": "query",
            "name": "replaceExisting",
            "required": false,
            "type": "boolean",
            "x-omitempty": false
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Import stat cycles successfully",
            "schema": {
              "$ref": "#/definitions/StatImportInfo"
            }
          },
          "400": {
            "description": "<table><tr><td>errorCode</td><td>errorMessage</td></tr><tr><td>12222</td><td>Stats data for namespace [{namespace}] is invalid</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "401": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20001</td><td>Unauthorized</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "403": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20013</td><td>insufficient permission</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "500": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20000</td><td>Internal server error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "Import stat cycle configurations",
        "tags": [
          "StatCycleConfiguration"
        ],
        "x-errorCodes": {
          "12222": "Stats data for namespace [{namespace}] is invalid",
          "20000": "Internal server error",
          "20001": "Unauthorized",
          "20013": "insufficient permission"
        },
        "x-security": {
          "userPermissions": "ADMIN:NAMESPACE:{namespace}:STAT [CREATE]"
        }
      }
    },
    "/social/v1/admin/namespaces/{namespace}/statCycles/{cycleId}": {
      "delete": {
        "description": "Deletes stat cycle.&lt;br&gt;",
        "operationId": "deleteStatCycle",
        "parameters": [
          {
            "description": "cycle id",
            "in": "path",
            "name": "cycleId",
            "required": true,
            "type": "string"
          },
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful operation"
          },
          "401": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20001</td><td>Unauthorized</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "403": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20013</td><td>insufficient permission</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "404": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>12245</td><td>Stat cycle [{id}] cannot be found in namespace [{namespace}]</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "500": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20000</td><td>Internal server error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "Deletes stat cycle",
        "tags": [
          "StatCycleConfiguration"
        ],
        "x-errorCodes": {
          "12245": "Stat cycle [{id}] cannot be found in namespace [{namespace}]",
          "20000": "Internal server error",
          "20001": "Unauthorized",
          "20013": "insufficient permission"
        },
        "x-security": {
          "userPermissions": "ADMIN:NAMESPACE:{namespace}:STAT [DELETE]"
        }
      },
      "get": {
        "description": "Get stat cycle.&lt;br&gt;Other detail info:&lt;ul&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: stat cycle info&lt;/ul&gt;",
        "operationId": "getStatCycle",
        "parameters": [
          {
            "description": "cycle id",
            "in": "path",
            "name": "cycleId",
            "required": true,
            "type": "string"
          },
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/StatCycleInfo"
            }
          },
          "401": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20001</td><td>Unauthorized</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "403": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20013</td><td>insufficient permission</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "404": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>12245</td><td>Stat cycle [{id}] cannot be found in namespace [{namespace}]</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "500": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20000</td><td>Internal server error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "Get stat cycle",
        "tags": [
          "StatCycleConfiguration"
        ],
        "x-errorCodes": {
          "12245": "Stat cycle [{id}] cannot be found in namespace [{namespace}]",
          "20000": "Internal server error",
          "20001": "Unauthorized",
          "20013": "insufficient permission"
        },
        "x-security": {
          "userPermissions": "ADMIN:NAMESPACE:{namespace}:STAT [READ]"
        }
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Update stat cycle.&lt;br&gt;Other detail info:&lt;ul&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: updated stat cycle&lt;/li&gt;&lt;/ul&gt;",
        "operationId": "updateStatCycle",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StatCycleUpdate"
            }
          },
          {
            "description": "cycle id",
            "in": "path",
            "name": "cycleId",
            "required": true,
            "type": "string"
          },
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/StatCycleInfo"
            }
          },
          "400": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>12225</td><td>Invalid time range</td></tr><tr><td>12226</td><td>Invalid date [{date}] of month [{month}]</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "401": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20001</td><td>Unauthorized</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "403": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20013</td><td>insufficient permission</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "404": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>12245</td><td>Stat cycle [{id}] cannot be found in namespace [{namespace}]</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "409": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>12277</td><td>Stat cycle [{id}] in namespace [{namespace}] with status [{status}] cannot be updated</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "422": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20002</td><td>validation error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ValidationErrorEntity"
            }
          },
          "500": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20000</td><td>Internal server error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "Update stat cycle",
        "tags": [
          "StatCycleConfiguration"
        ],
        "x-errorCodes": {
          "12225": "Invalid time range",
          "12226": "Invalid date [{date}] of month [{month}]",
          "12245": "Stat cycle [{id}] cannot be found in namespace [{namespace}]",
          "12277": "Stat cycle [{id}] in namespace [{namespace}] with status [{status}] cannot be updated",
          "20000": "Internal server error",
          "20001": "Unauthorized",
          "20002": "validation error",
          "20013": "insufficient permission"
        },
        "x-security": {
          "userPermissions": "ADMIN:NAMESPACE:{namespace}:STAT [UPDATE]"
        }
      }
    },
    "/social/v1/admin/namespaces/{namespace}/statCycles/{cycleId}/stats/add/bulk": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Bulk add stat cycle to stats.&lt;br&gt;",
        "operationId": "bulkAddStats",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BulkCycleStatsAdd"
            }
          },
          {
            "description": "cycle id",
            "in": "path",
            "name": "cycleId",
            "required": true,
            "type": "string"
          },
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/BulkStatCycleOperationResult"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "401": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20001</td><td>Unauthorized</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "403": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20013</td><td>insufficient permission</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "404": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>12245</td><td>Stat cycle [{id}] cannot be found in namespace [{namespace}]</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "422": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20002</td><td>validation error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ValidationErrorEntity"
            }
          },
          "500": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20000</td><td>Internal server error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "Bulk add stat cycle to stats",
        "tags": [
          "StatCycleConfiguration"
        ],
        "x-errorCodes": {
          "12245": "Stat cycle [{id}] cannot be found in namespace [{namespace}]",
          "20000": "Internal server error",
          "20001": "Unauthorized",
          "20002": "validation error",
          "20013": "insufficient permission"
        },
        "x-security": {
          "userPermissions": "ADMIN:NAMESPACE:{namespace}:STAT [CREATE]"
        }
      }
    },
    "/social/v1/admin/namespaces/{namespace}/statCycles/{cycleId}/stop": {
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Stop stat cycle.&lt;br&gt;Other detail info:&lt;ul&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: updated stat cycle&lt;/li&gt;&lt;/ul&gt;",
        "operationId": "stopStatCycle",
        "parameters": [
          {
            "description": "cycle id",
            "in": "path",
            "name": "cycleId",
            "required": true,
            "type": "string"
          },
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/StatCycleInfo"
            }
          },
          "401": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20001</td><td>Unauthorized</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "403": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20013</td><td>insufficient permission</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "404": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>12245</td><td>Stat cycle [{id}] cannot be found in namespace [{namespace}]</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "409": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>12279</td><td>Invalid stat cycle status: Stat cycle [{id}], namespace [{namespace}], status [{status}]</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "500": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20000</td><td>Internal server error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "Stop stat cycle",
        "tags": [
          "StatCycleConfiguration"
        ],
        "x-errorCodes": {
          "12245": "Stat cycle [{id}] cannot be found in namespace [{namespace}]",
          "12279": "Invalid stat cycle status: Stat cycle [{id}], namespace [{namespace}], status [{status}]",
          "20000": "Internal server error",
          "20001": "Unauthorized",
          "20013": "insufficient permission"
        },
        "x-security": {
          "userPermissions": "ADMIN:NAMESPACE:{namespace}:STAT [UPDATE]"
        }
      }
    },
    "/social/v1/admin/namespaces/{namespace}/statitems/bulk": {
      "get": {
        "description": "Bulk fetch multiple user&#39;s statitem value for a given namespace and statCode.  \nOther detail info:\n+ *Returns*: list of user&#39;s statItem",
        "operationId": "bulkFetchStatItems",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "stat code",
            "in": "query",
            "name": "statCode",
            "required": true,
            "type": "string"
          },
          {
            "description": "comma separated user Ids",
            "in": "query",
            "name": "userIds",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/UserStatItemInfo"
              },
              "type": "array"
            }
          },
          "401": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20001</td><td>Unauthorized</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "403": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20013</td><td>insufficient permission</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "422": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20002</td><td>validation error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ValidationErrorEntity"
            }
          },
          "500": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20000</td><td>Internal server error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "Bulk fetch statitems value",
        "tags": [
          "UserStatistic"
        ],
        "x-errorCodes": {
          "20000": "Internal server error",
          "20001": "Unauthorized",
          "20002": "validation error",
          "20013": "insufficient permission"
        },
        "x-security": {
          "userPermissions": "ADMIN:NAMESPACE:{namespace}:STATITEM [READ]"
        }
      }
    },
    "/social/v1/admin/namespaces/{namespace}/statitems/value/bulk": {
      "patch": {
        "consumes": [
          "application/json"
        ],
        "description": "Bulk update multiple user&#39;s statitems value.&lt;br&gt;",
        "operationId": "bulkIncUserStatItemValue",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "items": {
                "$ref": "#/definitions/BulkUserStatItemInc"
              },
              "type": "array"
            }
          },
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/BulkStatOperationResult"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "401": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20001</td><td>Unauthorized</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "403": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20013</td><td>insufficient permission</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "422": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20002</td><td>validation error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ValidationErrorEntity"
            }
          },
          "500": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20000</td><td>Internal server error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "Bulk update multiple user's statitems value",
        "tags": [
          "UserStatistic"
        ],
        "x-errorCodes": {
          "20000": "Internal server error",
          "20001": "Unauthorized",
          "20002": "validation error",
          "20013": "insufficient permission"
        },
        "x-security": {
          "userPermissions": "ADMIN:NAMESPACE:{namespace}:STATITEM [UPDATE]"
        }
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Bulk update multiple user&#39;s statitems value.&lt;br&gt;Other detail info:&lt;ul&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: bulk updated result&lt;/li&gt;&lt;/ul&gt;",
        "operationId": "bulkIncUserStatItem",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "items": {
                "$ref": "#/definitions/BulkUserStatItemInc"
              },
              "type": "array"
            }
          },
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/BulkStatOperationResult"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "401": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20001</td><td>Unauthorized</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "403": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20013</td><td>insufficient permission</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "422": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20002</td><td>validation error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ValidationErrorEntity"
            }
          },
          "500": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20000</td><td>Internal server error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "Bulk update multiple user's statitems value",
        "tags": [
          "UserStatistic"
        ],
        "x-errorCodes": {
          "20000": "Internal server error",
          "20001": "Unauthorized",
          "20002": "validation error",
          "20013": "insufficient permission"
        },
        "x-security": {
          "userPermissions": "ADMIN:NAMESPACE:{namespace}:STATITEM [UPDATE]"
        }
      }
    },
    "/social/v1/admin/namespaces/{namespace}/statitems/value/bulk/getOrDefault": {
      "get": {
        "description": "Bulk fetch multiple user&#39;s stat item values for a given namespace and statCode.\nNOTE: If stat item does not exist, will return default value. Other detail info:\n+ *Returns*: list of user&#39;s stat item values",
        "operationId": "bulkFetchOrDefaultStatItems",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "stat code",
            "in": "query",
            "name": "statCode",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "description": "user ids",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "userIds",
            "required": true,
            "type": "array"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/A DTO object for user stat item value"
              },
              "type": "array"
            }
          },
          "401": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20001</td><td>Unauthorized</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "403": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20013</td><td>insufficient permission</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "404": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>12241</td><td>Stat [{statCode}] cannot be found in namespace [{namespace}]</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "422": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20002</td><td>validation error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ValidationErrorEntity"
            }
          },
          "500": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20000</td><td>Internal server error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "Bulk fetch user stat item values",
        "tags": [
          "UserStatistic"
        ],
        "x-errorCodes": {
          "12241": "Stat [{statCode}] cannot be found in namespace [{namespace}]",
          "20000": "Internal server error",
          "20001": "Unauthorized",
          "20002": "validation error",
          "20013": "insufficient permission"
        },
        "x-security": {
          "userPermissions": "ADMIN:NAMESPACE:{namespace}:STATITEM [READ]"
        }
      }
    },
    "/social/v1/admin/namespaces/{namespace}/statitems/value/reset/bulk": {
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Bulk reset multiple user&#39;s statitems value.\nUser&#39;s statitem value will be reset to the default value defined in the statistic configuration.\n\nOther detail info:\n+ *Returns*: bulk updated result",
        "operationId": "bulkResetUserStatItem",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "items": {
                "$ref": "#/definitions/BulkUserStatItemReset"
              },
              "type": "array"
            }
          },
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/BulkStatOperationResult"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "401": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20001</td><td>Unauthorized</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "403": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20013</td><td>insufficient permission</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "422": {
            "description": "<table><tr><td>errorCode</td><td>errorMessage</td></tr><tr><td>20002</td><td>validation error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ValidationErrorEntity"
            }
          },
          "500": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20000</td><td>Internal server error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "Bulk reset multiple user's statitems value",
        "tags": [
          "UserStatistic"
        ],
        "x-errorCodes": {
          "20000": "Internal server error",
          "20001": "Unauthorized",
          "20002": "validation error",
          "20013": "insufficient permission"
        },
        "x-security": {
          "userPermissions": "ADMIN:NAMESPACE:{namespace}:STATITEM [UPDATE]"
        }
      }
    },
    "/social/v1/admin/namespaces/{namespace}/stats": {
      "get": {
        "description": "List stats by pagination.&lt;br&gt;Other detail info:&lt;ul&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: stats&lt;/li&gt;&lt;/ul&gt;",
        "operationId": "getStats",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "comma separated cycleId",
            "in": "query",
            "name": "cycleIds",
            "required": false,
            "type": "string"
          },
          {
            "description": "flag to filter global statcode",
            "in": "query",
            "name": "isGlobal",
            "required": false,
            "type": "boolean",
            "x-omitempty": false
          },
          {
            "description": "flag to filter public/private statcode",
            "in": "query",
            "name": "isPublic",
            "required": false,
            "type": "boolean",
            "x-omitempty": false
          },
          {
            "default": 20,
            "format": "int32",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "default": 0,
            "format": "int32",
            "in": "query",
            "name": "offset",
            "required": false,
            "type": "integer"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/StatPagingSlicedResult"
            }
          },
          "401": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20001</td><td>Unauthorized</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "403": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20013</td><td>insufficient permission</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "500": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20000</td><td>Internal server error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "List stats",
        "tags": [
          "StatConfiguration"
        ],
        "x-errorCodes": {
          "20000": "Internal server error",
          "20001": "Unauthorized",
          "20013": "insufficient permission"
        },
        "x-security": {
          "userPermissions": "ADMIN:NAMESPACE:{namespace}:STAT [READ]"
        }
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Create stat.&lt;br&gt;Other detail info:&lt;ul&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: created stat template&lt;/li&gt;&lt;li&gt;default minimum value is 0&lt;/li&gt;&lt;li&gt;default maximum value is 1.7976931348623157e+308&lt;/li&gt;&lt;li&gt;Field globalAggregationMethod will be ignored when setAsGlobal field is false&lt;/li&gt;&lt;/ul&gt;",
        "operationId": "createStat",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StatCreate"
            }
          },
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Create stat successfully",
            "schema": {
              "$ref": "#/definitions/StatInfo"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "401": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20001</td><td>Unauthorized</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "403": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20013</td><td>insufficient permission</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "404": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>12245</td><td>Stat cycle [{id}] cannot be found in namespace [{namespace}]</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "409": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>12271</td><td>Stat template with code [{statCode}] already exists in namespace [{namespace}]</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "422": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20002</td><td>validation error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ValidationErrorEntity"
            }
          },
          "500": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20000</td><td>Internal server error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "Create stat",
        "tags": [
          "StatConfiguration"
        ],
        "x-errorCodes": {
          "12245": "Stat cycle [{id}] cannot be found in namespace [{namespace}]",
          "12271": "Stat template with code [{statCode}] already exists in namespace [{namespace}]",
          "20000": "Internal server error",
          "20001": "Unauthorized",
          "20002": "validation error",
          "20013": "insufficient permission"
        },
        "x-security": {
          "userPermissions": "ADMIN:NAMESPACE:{namespace}:STAT [CREATE]"
        }
      }
    },
    "/social/v1/admin/namespaces/{namespace}/stats/export": {
      "get": {
        "description": "Export all stat configurations for a given namespace into file  At current, only JSON file is supported.",
        "operationId": "exportStats",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful export of stat configs",
            "schema": {
              "type": "file"
            }
          },
          "401": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20001</td><td>Unauthorized</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "403": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20013</td><td>insufficient permission</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "500": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20000</td><td>Internal server error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "Export all stat configurations",
        "tags": [
          "StatConfiguration"
        ],
        "x-errorCodes": {
          "20000": "Internal server error",
          "20001": "Unauthorized",
          "20013": "insufficient permission"
        },
        "x-security": {
          "userPermissions": "ADMIN:NAMESPACE:{namespace}:STAT [READ]"
        }
      }
    },
    "/social/v1/admin/namespaces/{namespace}/stats/import": {
      "post": {
        "consumes": [
          "multipart/form-data"
        ],
        "description": "Import stat configurations for a given namespace from file. At current, only JSON file is supported.",
        "operationId": "importStats",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "name": "file",
            "required": false,
            "type": "file"
          },
          {
            "description": "replaceExisting",
            "in": "query",
            "name": "replaceExisting",
            "required": false,
            "type": "boolean",
            "x-omitempty": false
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Import stats successfully",
            "schema": {
              "$ref": "#/definitions/StatImportInfo"
            }
          },
          "400": {
            "description": "<table><tr><td>errorCode</td><td>errorMessage</td></tr><tr><td>12222</td><td>Stats data for namespace [{namespace}] is invalid</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "401": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20001</td><td>Unauthorized</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "403": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20013</td><td>insufficient permission</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "500": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20000</td><td>Internal server error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "Import stat configurations",
        "tags": [
          "StatConfiguration"
        ],
        "x-errorCodes": {
          "12222": "Stats data for namespace [{namespace}] is invalid",
          "20000": "Internal server error",
          "20001": "Unauthorized",
          "20013": "insufficient permission"
        },
        "x-security": {
          "userPermissions": "ADMIN:NAMESPACE:{namespace}:STAT [CREATE]"
        }
      }
    },
    "/social/v1/admin/namespaces/{namespace}/stats/search": {
      "get": {
        "description": "Query stats by keyword.&lt;br&gt;Other detail info:&lt;ul&gt;&lt;li&gt;&lt;i&gt;Returns&lt;i&gt;: stats&lt;/li&gt;&lt;/ul&gt;",
        "operationId": "queryStats",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "keyword",
            "in": "query",
            "name": "keyword",
            "required": true,
            "type": "string"
          },
          {
            "description": "flag to filter global statcode",
            "in": "query",
            "name": "isGlobal",
            "required": false,
            "type": "boolean",
            "x-omitempty": false
          },
          {
            "description": "flag to filter public/private statecode",
            "in": "query",
            "name": "isPublic",
            "required": false,
            "type": "boolean",
            "x-omitempty": false
          },
          {
            "default": 20,
            "format": "int32",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "default": 0,
            "format": "int32",
            "in": "query",
            "name": "offset",
            "required": false,
            "type": "integer"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/StatPagingSlicedResult"
            }
          },
          "401": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20001</td><td>Unauthorized</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "403": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20013</td><td>insufficient permission</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "500": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20000</td><td>Internal server error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "Query stats by keyword",
        "tags": [
          "StatConfiguration"
        ],
        "x-errorCodes": {
          "20000": "Internal server error",
          "20001": "Unauthorized",
          "20013": "insufficient permission"
        },
        "x-security": {
          "userPermissions": "ADMIN:NAMESPACE:{namespace}:STAT [READ]"
        }
      }
    },
    "/social/v1/admin/namespaces/{namespace}/stats/{statCode}": {
      "delete": {
        "description": "Deletes stat template.&lt;br&gt;",
        "operationId": "deleteStat",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "stat code",
            "in": "path",
            "name": "statCode",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful delete of stat"
          },
          "401": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20001</td><td>Unauthorized</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "403": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20013</td><td>insufficient permission</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "404": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>12241</td><td>Stat [{statCode}] cannot be found in namespace [{namespace}]</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "500": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20000</td><td>Internal server error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "Deletes stat",
        "tags": [
          "StatConfiguration"
        ],
        "x-errorCodes": {
          "12241": "Stat [{statCode}] cannot be found in namespace [{namespace}]",
          "20000": "Internal server error",
          "20001": "Unauthorized",
          "20013": "insufficient permission"
        },
        "x-security": {
          "userPermissions": "ADMIN:NAMESPACE:{namespace}:STAT [DELETE]"
        }
      },
      "get": {
        "description": "Get stat by statCode.&lt;br&gt;Other detail info:&lt;ul&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: stat info&lt;/ul&gt;",
        "operationId": "getStat",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "stat Code",
            "in": "path",
            "name": "statCode",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/StatInfo"
            }
          },
          "401": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20001</td><td>Unauthorized</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "403": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20013</td><td>insufficient permission</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "404": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>12241</td><td>Stat [{statCode}] cannot be found in namespace [{namespace}]</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "500": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20000</td><td>Internal server error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "Get stat by statCode",
        "tags": [
          "StatConfiguration"
        ],
        "x-errorCodes": {
          "12241": "Stat [{statCode}] cannot be found in namespace [{namespace}]",
          "20000": "Internal server error",
          "20001": "Unauthorized",
          "20013": "insufficient permission"
        },
        "x-security": {
          "userPermissions": "ADMIN:NAMESPACE:{namespace}:STAT [READ]"
        }
      },
      "patch": {
        "consumes": [
          "application/json"
        ],
        "description": "Update stat.&lt;br&gt;Other detail info:&lt;ul&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: updated stat&lt;/li&gt;&lt;li&gt;&lt;i&gt;Field globalAggregationMethod will be ignored when the stat is not set as global&lt;/li&gt;&lt;li&gt;&lt;i&gt;Field globalAggregationMethod is not updatable when the stat status is TIED&lt;/li&gt;&lt;li&gt;&lt;i&gt;Field visibility is not updatable when the stat status is TIED&lt;/li&gt;&lt;/ul&gt;",
        "operationId": "updateStat",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StatUpdate"
            }
          },
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "stat code",
            "in": "path",
            "name": "statCode",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful update of stat",
            "schema": {
              "$ref": "#/definitions/StatInfo"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "401": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20001</td><td>Unauthorized</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "403": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20013</td><td>insufficient permission</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "404": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>12241</td><td>Stat [{statCode}] cannot be found in namespace [{namespace}]</td></tr><tr><td>12245</td><td>Stat cycle [{id}] cannot be found in namespace [{namespace}]</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "422": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20002</td><td>validation error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ValidationErrorEntity"
            }
          },
          "500": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20000</td><td>Internal server error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "Update stat",
        "tags": [
          "StatConfiguration"
        ],
        "x-errorCodes": {
          "12241": "Stat [{statCode}] cannot be found in namespace [{namespace}]",
          "12245": "Stat cycle [{id}] cannot be found in namespace [{namespace}]",
          "20000": "Internal server error",
          "20001": "Unauthorized",
          "20002": "validation error",
          "20013": "insufficient permission"
        },
        "x-security": {
          "userPermissions": "ADMIN:NAMESPACE:{namespace}:STAT [UPDATE]"
        }
      }
    },
    "/social/v1/admin/namespaces/{namespace}/stats/{statCode}/statitems": {
      "get": {
        "description": "Get users&#39; stat item values for a given namespace and statCode.\nOther info:\n+ *Returns*: list of users&#39; stat item values",
        "operationId": "getStatItems",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "stat Code",
            "in": "path",
            "name": "statCode",
            "required": true,
            "type": "string"
          },
          {
            "default": 20,
            "format": "int32",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "default": 0,
            "format": "int32",
            "in": "query",
            "name": "offset",
            "required": false,
            "type": "integer"
          },
          {
            "default": "value:desc",
            "description": "default is value:desc, allowed values: [value, value:asc, value:desc]",
            "in": "query",
            "name": "sortBy",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/StatItemValuePagingSlicedResult"
            }
          },
          "401": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20001</td><td>Unauthorized</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "403": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20013</td><td>insufficient permission</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "500": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20000</td><td>Internal server error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "Get users' stat item values by stat code",
        "tags": [
          "UserStatistic"
        ],
        "x-errorCodes": {
          "20000": "Internal server error",
          "20001": "Unauthorized",
          "20013": "insufficient permission"
        },
        "x-security": {
          "userPermissions": "ADMIN:NAMESPACE:{namespace}:STATITEM [READ]"
        }
      }
    },
    "/social/v1/admin/namespaces/{namespace}/stats/{statCode}/tied": {
      "delete": {
        "description": "Deletes stat template.",
        "operationId": "deleteTiedStat",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "stat code",
            "in": "path",
            "name": "statCode",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully delete the stat of tied status"
          },
          "401": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20001</td><td>Unauthorized</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "403": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20013</td><td>insufficient permission</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "404": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>12241</td><td>Stat [{statCode}] cannot be found in namespace [{namespace}]</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "409": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>12276</td><td> Stat template with code [{statCode}] in namespace [{namespace}] not deletable due it is in an INIT status </td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "500": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20000</td><td>Internal server error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "Deletes tied stat",
        "tags": [
          "StatConfiguration"
        ],
        "x-errorCodes": {
          "12241": "Stat [{statCode}] cannot be found in namespace [{namespace}]",
          "12276": " Stat template with code [{statCode}] in namespace [{namespace}] not deletable due it is in an INIT status ",
          "20000": "Internal server error",
          "20001": "Unauthorized",
          "20013": "insufficient permission"
        },
        "x-security": {
          "userPermissions": "ADMIN:NAMESPACE:{namespace}:STAT [DELETE]"
        }
      }
    },
    "/social/v1/admin/namespaces/{namespace}/users/{userId}/statCycles/{cycleId}/statCycleitems": {
      "get": {
        "description": "List user&#39;s statCycleItems by statCycle.&lt;br&gt;Other detail info:&lt;ul&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: stat cycle items&lt;/li&gt;&lt;/ul&gt;",
        "operationId": "getUserStatCycleItems",
        "parameters": [
          {
            "description": "cycle id",
            "in": "path",
            "name": "cycleId",
            "required": true,
            "type": "string"
          },
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "user ID",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          },
          {
            "description": "flag to filter which data to show.\n<ul> <li>Unfiltered will return all data</li><li>If set to false will return private user stat items only</li><li>If set to true will return public stat items only</li></ul>",
            "in": "query",
            "name": "isPublic",
            "required": false,
            "type": "boolean",
            "x-omitempty": false
          },
          {
            "default": 20,
            "format": "int32",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "default": 0,
            "format": "int32",
            "in": "query",
            "name": "offset",
            "required": false,
            "type": "integer"
          },
          {
            "description": "default is unsorted, allow values: [statCode, statCode:asc, statCode:desc, createdAt, createdAt:asc, createdAt:desc, updatedAt, updatedAt:asc, updatedAt:desc],and support sort group, eg: sortBy=statCode:asc,createdAt:desc.",
            "in": "query",
            "name": "sortBy",
            "required": false,
            "type": "string"
          },
          {
            "description": "comma separated stat codes",
            "in": "query",
            "name": "statCodes",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/UserStatCycleItemPagingSlicedResult"
            }
          },
          "401": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20001</td><td>Unauthorized</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "403": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20013</td><td>insufficient permission</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "404": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>12245</td><td>Stat cycle [{id}] cannot be found in namespace [{namespace}]</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "422": {
            "description": "<table><tr><td>errorCode</td><td>errorMessage</td></tr><tr><td>20002</td><td>validation error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ValidationErrorEntity"
            }
          },
          "500": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20000</td><td>Internal server error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "List user's statCycleItems by statCycle",
        "tags": [
          "UserStatisticCycle"
        ],
        "x-errorCodes": {
          "12245": "Stat cycle [{id}] cannot be found in namespace [{namespace}]",
          "20000": "Internal server error",
          "20001": "Unauthorized",
          "20002": "validation error",
          "20013": "insufficient permission"
        },
        "x-security": {
          "userPermissions": "ADMIN:NAMESPACE:{namespace}:USER:{userId}:STATITEM [READ]"
        }
      }
    },
    "/social/v1/admin/namespaces/{namespace}/users/{userId}/statitems": {
      "get": {
        "description": "List user&#39;s statItems.&lt;br&gt;Other detail info:&lt;ul&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: stat items&lt;/li&gt;&lt;/ul&gt;",
        "operationId": "getUserStatItems",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "user ID",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          },
          {
            "description": "flag to filter which data to show.\n<ul> <li>Unfiltered will return all data</li><li>If set to false will return private user stat items only</li><li>If set to true will return public stat items only</li></ul>",
            "in": "query",
            "name": "isPublic",
            "required": false,
            "type": "boolean",
            "x-omitempty": false
          },
          {
            "default": 20,
            "format": "int32",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "default": 0,
            "format": "int32",
            "in": "query",
            "name": "offset",
            "required": false,
            "type": "integer"
          },
          {
            "default": "updatedAt:asc",
            "description": "default is updatedAt:asc, allow values: [statCode, statCode:asc, statCode:desc, createdAt, createdAt:asc, createdAt:desc, updatedAt, updatedAt:asc, updatedAt:desc],and support sort group, eg: sortBy=statCode:asc,createdAt:desc.",
            "in": "query",
            "name": "sortBy",
            "required": false,
            "type": "string"
          },
          {
            "description": "stat codes",
            "in": "query",
            "name": "statCodes",
            "required": false,
            "type": "string"
          },
          {
            "description": "tags",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/UserStatItemPagingSlicedResult"
            }
          },
          "401": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20001</td><td>Unauthorized</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "403": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20013</td><td>insufficient permission</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "422": {
            "description": "<table><tr><td>errorCode</td><td>errorMessage</td></tr><tr><td>20002</td><td>validation error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ValidationErrorEntity"
            }
          },
          "500": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20000</td><td>Internal server error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "List user's statItems",
        "tags": [
          "UserStatistic"
        ],
        "x-errorCodes": {
          "20000": "Internal server error",
          "20001": "Unauthorized",
          "20002": "validation error",
          "20013": "insufficient permission"
        },
        "x-security": {
          "userPermissions": "ADMIN:NAMESPACE:{namespace}:USER:{userId}:STATITEM [READ]"
        }
      }
    },
    "/social/v1/admin/namespaces/{namespace}/users/{userId}/statitems/bulk": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Bulk create user&#39;s statItems.&lt;br&gt;Other detail info:&lt;ul&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: bulk created result&lt;/li&gt;",
        "operationId": "bulkCreateUserStatItems",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "items": {
                "$ref": "#/definitions/BulkStatItemCreate"
              },
              "type": "array"
            }
          },
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "user ID",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/BulkStatOperationResult"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "401": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20001</td><td>Unauthorized</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "403": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20013</td><td>insufficient permission</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "422": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20002</td><td>validation error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ValidationErrorEntity"
            }
          },
          "500": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20000</td><td>Internal server error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "Bulk create user's statItems",
        "tags": [
          "UserStatistic"
        ],
        "x-errorCodes": {
          "20000": "Internal server error",
          "20001": "Unauthorized",
          "20002": "validation error",
          "20013": "insufficient permission"
        },
        "x-security": {
          "userPermissions": "ADMIN:NAMESPACE:{namespace}:USER:{userId}:STATITEM [CREATE]"
        }
      }
    },
    "/social/v1/admin/namespaces/{namespace}/users/{userId}/statitems/value/bulk": {
      "patch": {
        "consumes": [
          "application/json"
        ],
        "description": "Bulk update user&#39;s statitems value.&lt;br&gt;Other detail info:&lt;ul&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: bulk updated result&lt;/li&gt;&lt;/ul&gt;",
        "operationId": "bulkIncUserStatItemValue_1",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "items": {
                "$ref": "#/definitions/BulkStatItemInc"
              },
              "type": "array"
            }
          },
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "user ID",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/BulkStatOperationResult"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "401": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20001</td><td>Unauthorized</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "403": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20013</td><td>insufficient permission</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "422": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20002</td><td>validation error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ValidationErrorEntity"
            }
          },
          "500": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20000</td><td>Internal server error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "Bulk update user's statitems value",
        "tags": [
          "UserStatistic"
        ],
        "x-errorCodes": {
          "20000": "Internal server error",
          "20001": "Unauthorized",
          "20002": "validation error",
          "20013": "insufficient permission"
        },
        "x-security": {
          "userPermissions": "ADMIN:NAMESPACE:{namespace}:USER:{userId}:STATITEM [UPDATE]"
        }
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Bulk update user&#39;s statitems value.&lt;br&gt;Other detail info:&lt;ul&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: bulk updated result&lt;/li&gt;&lt;/ul&gt;",
        "operationId": "bulkIncUserStatItem_1",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "items": {
                "$ref": "#/definitions/BulkStatItemInc"
              },
              "type": "array"
            }
          },
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "user ID",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/BulkStatOperationResult"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "401": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20001</td><td>Unauthorized</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "403": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20013</td><td>insufficient permission</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "422": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20002</td><td>validation error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ValidationErrorEntity"
            }
          },
          "500": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20000</td><td>Internal server error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "Bulk update user's statitems value",
        "tags": [
          "UserStatistic"
        ],
        "x-errorCodes": {
          "20000": "Internal server error",
          "20001": "Unauthorized",
          "20002": "validation error",
          "20013": "insufficient permission"
        },
        "x-security": {
          "userPermissions": "ADMIN:NAMESPACE:{namespace}:USER:{userId}:STATITEM [UPDATE]"
        }
      }
    },
    "/social/v1/admin/namespaces/{namespace}/users/{userId}/statitems/value/reset/bulk": {
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Bulk reset user&#39;s statitems value for given namespace and user.  \nOther detail info:\n+ *Returns*: bulk updated result",
        "operationId": "bulkResetUserStatItem_1",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "items": {
                "$ref": "#/definitions/BulkStatItemReset"
              },
              "type": "array"
            }
          },
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "user ID",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/BulkStatOperationResult"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "401": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20001</td><td>Unauthorized</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "403": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20013</td><td>insufficient permission</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "422": {
            "description": "<table><tr><td>errorCode</td><td>errorMessage</td></tr><tr><td>20002</td><td>validation error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ValidationErrorEntity"
            }
          },
          "500": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20000</td><td>Internal server error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "Bulk reset user's statitems value",
        "tags": [
          "UserStatistic"
        ],
        "x-errorCodes": {
          "20000": "Internal server error",
          "20001": "Unauthorized",
          "20002": "validation error",
          "20013": "insufficient permission"
        },
        "x-security": {
          "userPermissions": "ADMIN:NAMESPACE:{namespace}:USER:{userId}:STATITEM [UPDATE]"
        }
      }
    },
    "/social/v1/admin/namespaces/{namespace}/users/{userId}/stats/{statCode}/statitems": {
      "delete": {
        "description": "This endpoint is for testing purpose. Use this endpoint for cleaning up after testing.&lt;br&gt;Delete user&#39;s statItems given stat code.&lt;br&gt;Other detail info:&lt;ul&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: no content&lt;/li&gt;&lt;/li&gt;",
        "operationId": "deleteUserStatItems",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "stat code",
            "in": "path",
            "name": "statCode",
            "required": true,
            "type": "string"
          },
          {
            "description": "user ID",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "delete successfully"
          },
          "401": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20001</td><td>Unauthorized</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "403": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20013</td><td>insufficient permission</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "404": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>12242</td><td>Stat item of [{statCode}] of user [{profileId}] cannot be found in namespace [{namespace}]</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "422": {
            "description": "<table><tr><td>errorCode</td><td>errorMessage</td></tr><tr><td>20002</td><td>validation error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ValidationErrorEntity"
            }
          },
          "500": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20000</td><td>Internal server error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "Delete User's statItems",
        "tags": [
          "UserStatistic"
        ],
        "x-errorCodes": {
          "12242": "Stat item of [{statCode}] of user [{profileId}] cannot be found in namespace [{namespace}]",
          "20000": "Internal server error",
          "20001": "Unauthorized",
          "20002": "validation error",
          "20013": "insufficient permission"
        },
        "x-security": {
          "userPermissions": "ADMIN:NAMESPACE:{namespace}:USER:{userId}:STATITEM [DELETE]"
        }
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Create statItem for a user.&lt;br&gt;Other detail info:&lt;ul&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: created user&#39;s statItem&lt;/li&gt;&lt;/ul&gt;",
        "operationId": "createUserStatItem",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "stat code",
            "in": "path",
            "name": "statCode",
            "required": true,
            "type": "string"
          },
          {
            "description": "user ID",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Create user statItem successfully"
          },
          "401": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20001</td><td>Unauthorized</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "403": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20013</td><td>insufficient permission</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "404": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>12241</td><td>Stat [{statCode}] cannot be found in namespace [{namespace}]</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "409": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>12274</td><td>Stat item with code [{statCode}] of user [{profileId}] already exists in namespace [{namespace}]</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "422": {
            "description": "<table><tr><td>errorCode</td><td>errorMessage</td></tr><tr><td>20002</td><td>validation error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ValidationErrorEntity"
            }
          },
          "500": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20000</td><td>Internal server error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "Create user's statItem",
        "tags": [
          "UserStatistic"
        ],
        "x-errorCodes": {
          "12241": "Stat [{statCode}] cannot be found in namespace [{namespace}]",
          "12274": "Stat item with code [{statCode}] of user [{profileId}] already exists in namespace [{namespace}]",
          "20000": "Internal server error",
          "20001": "Unauthorized",
          "20002": "validation error",
          "20013": "insufficient permission"
        },
        "x-security": {
          "userPermissions": "ADMIN:NAMESPACE:{namespace}:USER:{userId}:STATITEM [CREATE]"
        }
      }
    },
    "/social/v1/admin/namespaces/{namespace}/users/{userId}/stats/{statCode}/statitems/value": {
      "patch": {
        "consumes": [
          "application/json"
        ],
        "description": "Update user&#39;s statitem value.&lt;br&gt;Other detail info:&lt;ul&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: updated user&#39;s statItem&lt;/li&gt;&lt;/ul&gt;",
        "operationId": "incUserStatItemValue",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StatItemInc"
            }
          },
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "stat code",
            "in": "path",
            "name": "statCode",
            "required": true,
            "type": "string"
          },
          {
            "description": "user ID",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/StatItemIncResult"
            }
          },
          "400": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>12221</td><td>Invalid stat operator, expect [{expected}] but actual [{actual}]</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "401": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20001</td><td>Unauthorized</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "403": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20013</td><td>insufficient permission</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "404": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>12241</td><td>Stat [{statCode}] cannot be found in namespace [{namespace}]</td></tr><tr><td>12242</td><td>Stat item of [{statCode}] of user [{profileId}] cannot be found in namespace [{namespace}]</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "409": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>12273</td><td>Stat [{statCode}] is not decreasable</td></tr><tr><td>12275</td><td>[{action}] value: [{value}] of stat [{statCode}]  is out of range while minimum [{minimum}] and maximum [{maximum}] in namespace [{namespace}]</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "422": {
            "description": "<table><tr><td>errorCode</td><td>errorMessage</td></tr><tr><td>20002</td><td>validation error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ValidationErrorEntity"
            }
          },
          "500": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20000</td><td>Internal server error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "Update user's statitem value",
        "tags": [
          "UserStatistic"
        ],
        "x-errorCodes": {
          "12221": "Invalid stat operator, expect [{expected}] but actual [{actual}]",
          "12241": "Stat [{statCode}] cannot be found in namespace [{namespace}]",
          "12242": "Stat item of [{statCode}] of user [{profileId}] cannot be found in namespace [{namespace}]",
          "12273": "Stat [{statCode}] is not decreasable",
          "12275": "[{action}] value: [{value}] of stat [{statCode}]  is out of range while minimum [{minimum}] and maximum [{maximum}] in namespace [{namespace}]",
          "20000": "Internal server error",
          "20001": "Unauthorized",
          "20002": "validation error",
          "20013": "insufficient permission"
        },
        "x-security": {
          "userPermissions": "ADMIN:NAMESPACE:{namespace}:USER:{userId}:STATITEM [UPDATE]"
        }
      }
    },
    "/social/v1/admin/namespaces/{namespace}/users/{userId}/stats/{statCode}/statitems/value/reset": {
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Reset user&#39;s statitem value for a given namespace and user.\nUser&#39;s statitem value will be reset to the default value defined in the statistic configuration.\n\nOther detail info:\n+ *Returns*: updated user&#39;s statItem",
        "operationId": "resetUserStatItemValue",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StatResetInfo"
            }
          },
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "stat code",
            "in": "path",
            "name": "statCode",
            "required": true,
            "type": "string"
          },
          {
            "description": "user ID",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          },
          {
            "description": "additional key",
            "in": "query",
            "name": "additionalKey",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/StatItemIncResult"
            }
          },
          "400": {
            "description": "<table><tr><td>errorCode</td><td>errorMessage</td></tr><tr><td>12221</td><td>Invalid stat operator, expect [{expected}] but actual [{actual}]</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "401": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20001</td><td>Unauthorized</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "403": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20013</td><td>insufficient permission</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "404": {
            "description": "<table><tr><td>errorCode</td><td>errorMessage</td></tr><tr><td>12241</td><td>Stat [{statCode}] cannot be found in namespace [{namespace}]</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "422": {
            "description": "<table><tr><td>errorCode</td><td>errorMessage</td></tr><tr><td>20002</td><td>validation error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ValidationErrorEntity"
            }
          },
          "500": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20000</td><td>Internal server error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "Reset user's statitem value",
        "tags": [
          "UserStatistic"
        ],
        "x-errorCodes": {
          "12221": "Invalid stat operator, expect [{expected}] but actual [{actual}]",
          "12241": "Stat [{statCode}] cannot be found in namespace [{namespace}]",
          "20000": "Internal server error",
          "20001": "Unauthorized",
          "20002": "validation error",
          "20013": "insufficient permission"
        },
        "x-security": {
          "userPermissions": "ADMIN:NAMESPACE:{namespace}:USER:{userId}:STATITEM [UPDATE]"
        }
      }
    },
    "/social/v1/public/namespaces/{namespace}/globalstatitems": {
      "get": {
        "description": "List global statItems by pagination.&lt;br&gt;Other detail info:&lt;ul&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: stat items&lt;/li&gt;&lt;/ul&gt;",
        "operationId": "getGlobalStatItems_1",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "default": 20,
            "format": "int32",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "default": 0,
            "format": "int32",
            "in": "query",
            "name": "offset",
            "required": false,
            "type": "integer"
          },
          {
            "description": "comma separated stat codes",
            "in": "query",
            "name": "statCodes",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/GlobalStatItemPagingSlicedResult"
            }
          },
          "401": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20001</td><td>Unauthorized</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "403": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20013</td><td>insufficient permission</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "500": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20000</td><td>Internal server error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "List global statItems",
        "tags": [
          "GlobalStatistic"
        ],
        "x-errorCodes": {
          "20000": "Internal server error",
          "20001": "Unauthorized",
          "20013": "insufficient permission"
        },
        "x-security": {
          "userPermissions": "NAMESPACE:{namespace}:STATITEM [READ]"
        }
      }
    },
    "/social/v1/public/namespaces/{namespace}/globalstatitems/{statCode}": {
      "get": {
        "description": "Get global statItem by stat code.&lt;br&gt;Other detail info:&lt;ul&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: global stat item&lt;/li&gt;&lt;/ul&gt;",
        "operationId": "getGlobalStatItemByStatCode_1",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "stat Code",
            "in": "path",
            "name": "statCode",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/GlobalStatItemInfo"
            }
          },
          "401": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20001</td><td>Unauthorized</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "403": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20013</td><td>insufficient permission</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "404": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>12244</td><td>Global stat item of [{statCode}] cannot be found in namespace [{namespace}]</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "500": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20000</td><td>Internal server error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "Get global statItem by stat code",
        "tags": [
          "GlobalStatistic"
        ],
        "x-errorCodes": {
          "12244": "Global stat item of [{statCode}] cannot be found in namespace [{namespace}]",
          "20000": "Internal server error",
          "20001": "Unauthorized",
          "20013": "insufficient permission"
        },
        "x-security": {
          "userPermissions": "NAMESPACE:{namespace}:STATITEM [READ]"
        }
      }
    },
    "/social/v1/public/namespaces/{namespace}/statCycles": {
      "get": {
        "description": "List stat cycles by pagination.&lt;br&gt;Other detail info:&lt;ul&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: stat cycles&lt;/li&gt;&lt;/ul&gt;",
        "operationId": "getStatCycles_1",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "enum": [
              "ANNUALLY",
              "DAILY",
              "MONTHLY",
              "SEASONAL",
              "WEEKLY"
            ],
            "in": "query",
            "name": "cycleType",
            "required": false,
            "type": "string"
          },
          {
            "default": 20,
            "format": "int32",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "name",
            "in": "query",
            "name": "name",
            "required": false,
            "type": "string"
          },
          {
            "default": 0,
            "format": "int32",
            "in": "query",
            "name": "offset",
            "required": false,
            "type": "integer"
          },
          {
            "description": "default is unsorted, allow values: [start, start:asc, start:desc, createdAt, createdAt:asc, createdAt:desc, updatedAt, updatedAt:asc, updatedAt:desc],and support sort group, eg: sortBy=start:asc,createdAt:desc.",
            "in": "query",
            "name": "sortBy",
            "required": false,
            "type": "string"
          },
          {
            "enum": [
              "ACTIVE",
              "INIT",
              "STOPPED"
            ],
            "in": "query",
            "name": "status",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/StatCyclePagingSlicedResult"
            }
          },
          "401": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20001</td><td>Unauthorized</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "403": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20013</td><td>insufficient permission</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "500": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20000</td><td>Internal server error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "List stat cycles",
        "tags": [
          "StatCycleConfiguration"
        ],
        "x-errorCodes": {
          "20000": "Internal server error",
          "20001": "Unauthorized",
          "20013": "insufficient permission"
        },
        "x-security": {
          "userPermissions": "NAMESPACE:{namespace}:STAT [READ]"
        }
      }
    },
    "/social/v1/public/namespaces/{namespace}/statCycles/bulk": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Bulk get stat cycle.&lt;br&gt;Other detail info:&lt;ul&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: list of stat cycles&lt;/li&gt;&lt;/ul&gt;",
        "operationId": "bulkGetStatCycle_1",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BulkStatCycleRequest"
            }
          },
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/BulkStatCycleResult"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "401": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20001</td><td>Unauthorized</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "403": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20013</td><td>insufficient permission</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "422": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20002</td><td>validation error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ValidationErrorEntity"
            }
          },
          "500": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20000</td><td>Internal server error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "Bulk get stat cycle",
        "tags": [
          "StatCycleConfiguration"
        ],
        "x-errorCodes": {
          "20000": "Internal server error",
          "20001": "Unauthorized",
          "20002": "validation error",
          "20013": "insufficient permission"
        },
        "x-security": {
          "userPermissions": "NAMESPACE:{namespace}:STAT [READ]"
        }
      }
    },
    "/social/v1/public/namespaces/{namespace}/statCycles/{cycleId}": {
      "get": {
        "description": "Get stat cycle.&lt;br&gt;Other detail info:&lt;ul&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: stat cycle info&lt;/ul&gt;",
        "operationId": "getStatCycle_1",
        "parameters": [
          {
            "description": "cycle id",
            "in": "path",
            "name": "cycleId",
            "required": true,
            "type": "string"
          },
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/StatCycleInfo"
            }
          },
          "401": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20001</td><td>Unauthorized</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "403": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20013</td><td>insufficient permission</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "404": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>12245</td><td>Stat cycle [{id}] cannot be found in namespace [{namespace}]</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "500": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20000</td><td>Internal server error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "Get stat cycle",
        "tags": [
          "StatCycleConfiguration"
        ],
        "x-errorCodes": {
          "12245": "Stat cycle [{id}] cannot be found in namespace [{namespace}]",
          "20000": "Internal server error",
          "20001": "Unauthorized",
          "20013": "insufficient permission"
        },
        "x-security": {
          "userPermissions": "NAMESPACE:{namespace}:STAT [READ]"
        }
      }
    },
    "/social/v1/public/namespaces/{namespace}/statitems/bulk": {
      "get": {
        "description": "Public bulk fetch multiple user&#39;s statitem value for a given namespace and statCode.  \nOther detail info:\n+ *Returns*: list of user&#39;s statItem",
        "operationId": "bulkFetchStatItems_1",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "stat code",
            "in": "query",
            "name": "statCode",
            "required": true,
            "type": "string"
          },
          {
            "description": "comma separated user Ids",
            "in": "query",
            "name": "userIds",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/UserStatItemInfo"
              },
              "type": "array"
            }
          },
          "401": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20001</td><td>Unauthorized</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "403": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20013</td><td>insufficient permission</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "422": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20002</td><td>validation error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ValidationErrorEntity"
            }
          },
          "500": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20000</td><td>Internal server error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "Public bulk fetch statitems value",
        "tags": [
          "UserStatistic"
        ],
        "x-errorCodes": {
          "20000": "Internal server error",
          "20001": "Unauthorized",
          "20002": "validation error",
          "20013": "insufficient permission"
        },
        "x-security": {
          "userPermissions": "NAMESPACE:{namespace}:STATITEM [READ]"
        }
      }
    },
    "/social/v1/public/namespaces/{namespace}/statitems/value/bulk": {
      "patch": {
        "consumes": [
          "application/json"
        ],
        "description": "Public bulk update multiple user&#39;s statitems value.&lt;br&gt;Other detail info:&lt;ul&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: bulk updated result&lt;/li&gt;&lt;/ul&gt;",
        "operationId": "publicBulkIncUserStatItemValue",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "items": {
                "$ref": "#/definitions/BulkUserStatItemInc"
              },
              "type": "array"
            }
          },
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/BulkStatOperationResult"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "401": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20001</td><td>Unauthorized</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "403": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20013</td><td>insufficient permission</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "422": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20002</td><td>validation error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ValidationErrorEntity"
            }
          },
          "500": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20000</td><td>Internal server error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "Public bulk update multiple user's statitems value",
        "tags": [
          "UserStatistic"
        ],
        "x-errorCodes": {
          "20000": "Internal server error",
          "20001": "Unauthorized",
          "20002": "validation error",
          "20013": "insufficient permission"
        },
        "x-security": {
          "userPermissions": "NAMESPACE:{namespace}:STATITEM [UPDATE]"
        }
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Public bulk update multiple user&#39;s statitems value.&lt;br&gt;Other detail info:&lt;ul&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: bulk updated result&lt;/li&gt;&lt;/ul&gt;",
        "operationId": "publicBulkIncUserStatItem",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "items": {
                "$ref": "#/definitions/BulkUserStatItemInc"
              },
              "type": "array"
            }
          },
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/BulkStatOperationResult"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "401": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20001</td><td>Unauthorized</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "403": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20013</td><td>insufficient permission</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "422": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20002</td><td>validation error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ValidationErrorEntity"
            }
          },
          "500": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20000</td><td>Internal server error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "Public bulk update multiple user's statitems value",
        "tags": [
          "UserStatistic"
        ],
        "x-errorCodes": {
          "20000": "Internal server error",
          "20001": "Unauthorized",
          "20002": "validation error",
          "20013": "insufficient permission"
        },
        "x-security": {
          "userPermissions": "NAMESPACE:{namespace}:STATITEM [UPDATE]"
        }
      }
    },
    "/social/v1/public/namespaces/{namespace}/statitems/value/reset/bulk": {
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Bulk reset multiple user&#39;s statitems value. \nUser&#39;s statitem value will be reset to the default value defined in the statistic configuration.\n\nOther detail info:\n+ *Returns*: bulk updated result",
        "operationId": "bulkResetUserStatItem_2",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "items": {
                "$ref": "#/definitions/BulkUserStatItemReset"
              },
              "type": "array"
            }
          },
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/BulkStatOperationResult"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "401": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20001</td><td>Unauthorized</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "403": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20013</td><td>insufficient permission</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "422": {
            "description": "<table><tr><td>errorCode</td><td>errorMessage</td></tr><tr><td>20002</td><td>validation error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ValidationErrorEntity"
            }
          },
          "500": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20000</td><td>Internal server error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "Public bulk reset multiple user's statitems value",
        "tags": [
          "UserStatistic"
        ],
        "x-errorCodes": {
          "20000": "Internal server error",
          "20001": "Unauthorized",
          "20002": "validation error",
          "20013": "insufficient permission"
        },
        "x-security": {
          "userPermissions": "NAMESPACE:{namespace}:STATITEM [UPDATE]"
        }
      }
    },
    "/social/v1/public/namespaces/{namespace}/stats": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Create stat.&lt;br&gt;Other detail info:&lt;ul&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: created stat template&lt;/li&gt;&lt;li&gt;default minimum value is 0&lt;/li&gt;&lt;li&gt;default maximum value is 1.7976931348623157e+308&lt;/li&gt;&lt;li&gt;Field globalAggregationMethod will be ignored when setAsGlobal field is false&lt;/li&gt;&lt;/ul&gt;",
        "operationId": "createStat_1",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StatCreate"
            }
          },
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Create stat successfully",
            "schema": {
              "$ref": "#/definitions/StatInfo"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "401": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20001</td><td>Unauthorized</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "403": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20013</td><td>insufficient permission</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "404": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>12245</td><td>Stat cycle [{id}] cannot be found in namespace [{namespace}]</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "409": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>12271</td><td>Stat template with code [{statCode}] already exists in namespace [{namespace}]</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "422": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20002</td><td>validation error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ValidationErrorEntity"
            }
          },
          "500": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20000</td><td>Internal server error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "Create stat",
        "tags": [
          "StatConfiguration"
        ],
        "x-errorCodes": {
          "12245": "Stat cycle [{id}] cannot be found in namespace [{namespace}]",
          "12271": "Stat template with code [{statCode}] already exists in namespace [{namespace}]",
          "20000": "Internal server error",
          "20001": "Unauthorized",
          "20002": "validation error",
          "20013": "insufficient permission"
        },
        "x-security": {
          "userPermissions": "NAMESPACE:{namespace}:STAT [CREATE]"
        }
      }
    },
    "/social/v1/public/namespaces/{namespace}/users/me/statCycles/{cycleId}/statCycleitems": {
      "get": {
        "description": "List user&#39;s statCycleItems by statCycle.&lt;br&gt;Other detail info:&lt;ul&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: stat cycle items&lt;/li&gt;&lt;/ul&gt;",
        "operationId": "publicListMyStatCycleItems",
        "parameters": [
          {
            "description": "cycle id",
            "in": "path",
            "name": "cycleId",
            "required": true,
            "type": "string"
          },
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "default": 20,
            "format": "int32",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "default": 0,
            "format": "int32",
            "in": "query",
            "name": "offset",
            "required": false,
            "type": "integer"
          },
          {
            "description": "default is unsorted, allow values: [statCode, statCode:asc, statCode:desc, createdAt, createdAt:asc, createdAt:desc, updatedAt, updatedAt:asc, updatedAt:desc],and support sort group, eg: sortBy=statCode:asc,createdAt:desc.",
            "in": "query",
            "name": "sortBy",
            "required": false,
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "description": "stat codes",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "statCodes",
            "required": false,
            "type": "array"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/UserStatCycleItemPagingSlicedResult"
            }
          },
          "401": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20001</td><td>Unauthorized</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "403": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20013</td><td>insufficient permission</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "404": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>12245</td><td>Stat cycle [{id}] cannot be found in namespace [{namespace}]</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "422": {
            "description": "<table><tr><td>errorCode</td><td>errorMessage</td></tr><tr><td>20002</td><td>validation error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ValidationErrorEntity"
            }
          },
          "500": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20000</td><td>Internal server error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "List user's statCycleItems by statCycle",
        "tags": [
          "UserStatisticCycle"
        ],
        "x-errorCodes": {
          "12245": "Stat cycle [{id}] cannot be found in namespace [{namespace}]",
          "20000": "Internal server error",
          "20001": "Unauthorized",
          "20002": "validation error",
          "20013": "insufficient permission"
        },
        "x-security": {
          "userPermissions": "NAMESPACE:{namespace}:USER:{userId}:STATITEM [READ]"
        }
      }
    },
    "/social/v1/public/namespaces/{namespace}/users/me/statitems": {
      "get": {
        "description": "Public list all statItems by pagination.&lt;br&gt;Other detail info:&lt;ul&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: stat items&lt;/li&gt;&lt;/ul&gt;",
        "operationId": "publicListMyStatItems",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "default": 20,
            "format": "int32",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "default": 0,
            "format": "int32",
            "in": "query",
            "name": "offset",
            "required": false,
            "type": "integer"
          },
          {
            "description": "default is unsorted, allow values: [statCode, statCode:asc, statCode:desc, createdAt, createdAt:asc, createdAt:desc, updatedAt, updatedAt:asc, updatedAt:desc],and support sort group, eg: sortBy=statCode:asc,createdAt:desc.",
            "in": "query",
            "name": "sortBy",
            "required": false,
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "description": "stat codes",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "statCodes",
            "required": false,
            "type": "array"
          },
          {
            "collectionFormat": "multi",
            "description": "tags",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "tags",
            "required": false,
            "type": "array"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/UserStatItemPagingSlicedResult"
            }
          },
          "401": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20001</td><td>Unauthorized</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "403": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20013</td><td>insufficient permission</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "422": {
            "description": "<table><tr><td>errorCode</td><td>errorMessage</td></tr><tr><td>20002</td><td>validation error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ValidationErrorEntity"
            }
          },
          "500": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20000</td><td>Internal server error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "Public list user's statItems",
        "tags": [
          "UserStatistic"
        ],
        "x-errorCodes": {
          "20000": "Internal server error",
          "20001": "Unauthorized",
          "20002": "validation error",
          "20013": "insufficient permission"
        },
        "x-security": {
          "userPermissions": "NAMESPACE:{namespace}:USER:{userId}:STATITEM [READ]"
        }
      }
    },
    "/social/v1/public/namespaces/{namespace}/users/me/statitems/value/bulk": {
      "get": {
        "description": "Public list all statItems of user.&lt;br&gt;NOTE: &lt;li&gt;If stat code does not exist, will ignore this stat code.&lt;/li&gt;&lt;li&gt;If stat item does not exist, will return default value&lt;/li&gt;&lt;/ul&gt;Other detail info:&lt;ul&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: stat items&lt;/li&gt;&lt;/ul&gt;",
        "operationId": "publicListAllMyStatItems",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "additional key",
            "in": "query",
            "name": "additionalKey",
            "required": false,
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "description": "stat codes",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "statCodes",
            "required": false,
            "type": "array"
          },
          {
            "collectionFormat": "multi",
            "description": "tags",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "tags",
            "required": false,
            "type": "array"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/A DTO object for user stat item value"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>12223</td><td>Invalid stat codes in namespace [{namespace}]: [{statCodes}]</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "403": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20013</td><td>insufficient permission</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "404": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>12243</td><td>Stats cannot be found in namespace [{namespace}]</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "422": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20002</td><td>validation error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ValidationErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "Public list user's statItems",
        "tags": [
          "UserStatistic"
        ],
        "x-errorCodes": {
          "12223": "Invalid stat codes in namespace [{namespace}]: [{statCodes}]",
          "12243": "Stats cannot be found in namespace [{namespace}]",
          "20002": "validation error",
          "20013": "insufficient permission"
        },
        "x-security": {
          "userPermissions": "NAMESPACE:{namespace}:USER:{userId}:STATITEM [READ]"
        }
      }
    },
    "/social/v1/public/namespaces/{namespace}/users/{userId}/statCycles/{cycleId}/statCycleitems": {
      "get": {
        "description": "List user&#39;s statCycleItems by statCycle.&lt;br&gt;Other detail info:&lt;ul&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: stat cycle items&lt;/li&gt;&lt;/ul&gt;",
        "operationId": "getUserStatCycleItems_1",
        "parameters": [
          {
            "description": "cycle id",
            "in": "path",
            "name": "cycleId",
            "required": true,
            "type": "string"
          },
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "user ID",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          },
          {
            "default": 20,
            "format": "int32",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "default": 0,
            "format": "int32",
            "in": "query",
            "name": "offset",
            "required": false,
            "type": "integer"
          },
          {
            "description": "default is unsorted, allow values: [statCode, statCode:asc, statCode:desc, createdAt, createdAt:asc, createdAt:desc, updatedAt, updatedAt:asc, updatedAt:desc],and support sort group, eg: sortBy=statCode:asc,createdAt:desc.",
            "in": "query",
            "name": "sortBy",
            "required": false,
            "type": "string"
          },
          {
            "description": "comma separated stat codes",
            "in": "query",
            "name": "statCodes",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/UserStatCycleItemPagingSlicedResult"
            }
          },
          "401": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20001</td><td>Unauthorized</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "403": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20013</td><td>insufficient permission</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "404": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>12245</td><td>Stat cycle [{id}] cannot be found in namespace [{namespace}]</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "422": {
            "description": "<table><tr><td>errorCode</td><td>errorMessage</td></tr><tr><td>20002</td><td>validation error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ValidationErrorEntity"
            }
          },
          "500": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20000</td><td>Internal server error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "List user's statCycleItems by statCycle",
        "tags": [
          "UserStatisticCycle"
        ],
        "x-errorCodes": {
          "12245": "Stat cycle [{id}] cannot be found in namespace [{namespace}]",
          "20000": "Internal server error",
          "20001": "Unauthorized",
          "20002": "validation error",
          "20013": "insufficient permission"
        },
        "x-security": {
          "userPermissions": "NAMESPACE:{namespace}:USER:{userId}:STATITEM [READ]"
        }
      }
    },
    "/social/v1/public/namespaces/{namespace}/users/{userId}/statitems": {
      "get": {
        "description": "Public list all statItems by pagination.&lt;br&gt;Other detail info:&lt;ul&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: stat items&lt;/li&gt;&lt;/ul&gt;",
        "operationId": "publicQueryUserStatItems_1",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "user ID",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          },
          {
            "default": 20,
            "format": "int32",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "default": 0,
            "format": "int32",
            "in": "query",
            "name": "offset",
            "required": false,
            "type": "integer"
          },
          {
            "description": "default is unsorted, allow values: [statCode, statCode:asc, statCode:desc, createdAt, createdAt:asc, createdAt:desc, updatedAt, updatedAt:asc, updatedAt:desc],and support sort group, eg: sortBy=statCode:asc,createdAt:desc.",
            "in": "query",
            "name": "sortBy",
            "required": false,
            "type": "string"
          },
          {
            "description": "stat codes",
            "in": "query",
            "name": "statCodes",
            "required": false,
            "type": "string"
          },
          {
            "description": "tags",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/UserStatItemPagingSlicedResult"
            }
          },
          "401": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20001</td><td>Unauthorized</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "403": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20013</td><td>insufficient permission</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "422": {
            "description": "<table><tr><td>errorCode</td><td>errorMessage</td></tr><tr><td>20002</td><td>validation error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ValidationErrorEntity"
            }
          },
          "500": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20000</td><td>Internal server error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "Public list user's statItems",
        "tags": [
          "UserStatistic"
        ],
        "x-errorCodes": {
          "20000": "Internal server error",
          "20001": "Unauthorized",
          "20002": "validation error",
          "20013": "insufficient permission"
        },
        "x-security": {
          "userPermissions": "NAMESPACE:{namespace}:USER:{userId}:STATITEM [READ]"
        }
      }
    },
    "/social/v1/public/namespaces/{namespace}/users/{userId}/statitems/bulk": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Bulk create statItems.&lt;br&gt;Other detail info:&lt;ul&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: bulk created result&lt;/li&gt;&lt;/ul&gt;",
        "operationId": "publicBulkCreateUserStatItems",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "items": {
                "$ref": "#/definitions/BulkStatItemCreate"
              },
              "type": "array"
            }
          },
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "user ID",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/BulkStatOperationResult"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "401": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20001</td><td>Unauthorized</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "403": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20013</td><td>insufficient permission</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "422": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20002</td><td>validation error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ValidationErrorEntity"
            }
          },
          "500": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20000</td><td>Internal server error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "Bulk create user's statItems",
        "tags": [
          "UserStatistic"
        ],
        "x-errorCodes": {
          "20000": "Internal server error",
          "20001": "Unauthorized",
          "20002": "validation error",
          "20013": "insufficient permission"
        },
        "x-security": {
          "userPermissions": "NAMESPACE:{namespace}:USER:{userId}:STATITEM [CREATE]"
        }
      }
    },
    "/social/v1/public/namespaces/{namespace}/users/{userId}/statitems/value/bulk": {
      "get": {
        "description": "Public list all statItems of user.&lt;br&gt;NOTE: &lt;li&gt;If stat code does not exist, will ignore this stat code.&lt;/li&gt;&lt;li&gt;If stat item does not exist, will return default value&lt;/li&gt;&lt;/ul&gt;Other detail info:&lt;ul&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: stat items&lt;/li&gt;&lt;/ul&gt;",
        "operationId": "publicQueryUserStatItems",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "user id",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          },
          {
            "description": "additional key",
            "in": "query",
            "name": "additionalKey",
            "required": false,
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "description": "stat codes",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "statCodes",
            "required": false,
            "type": "array"
          },
          {
            "collectionFormat": "multi",
            "description": "tags",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "tags",
            "required": false,
            "type": "array"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/A DTO object for user stat item value"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>12223</td><td>Invalid stat codes in namespace [{namespace}]: [{statCodes}]</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "401": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20001</td><td>Unauthorized</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "403": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20013</td><td>insufficient permission</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "404": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>12243</td><td>Stats cannot be found in namespace [{namespace}]</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "422": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20002</td><td>validation error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ValidationErrorEntity"
            }
          },
          "500": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20000</td><td>Internal server error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "Public list user's statItems",
        "tags": [
          "UserStatistic"
        ],
        "x-errorCodes": {
          "12223": "Invalid stat codes in namespace [{namespace}]: [{statCodes}]",
          "12243": "Stats cannot be found in namespace [{namespace}]",
          "20000": "Internal server error",
          "20001": "Unauthorized",
          "20002": "validation error",
          "20013": "insufficient permission"
        },
        "x-security": {
          "userPermissions": "NAMESPACE:{namespace}:USER:{userId}:STATITEM [READ]"
        }
      },
      "patch": {
        "consumes": [
          "application/json"
        ],
        "description": "Public bulk update user&#39;s statitems value.&lt;br&gt;Other detail info:&lt;ul&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: bulk updated result&lt;/li&gt;",
        "operationId": "bulkIncUserStatItemValue_2",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "items": {
                "$ref": "#/definitions/BulkStatItemInc"
              },
              "type": "array"
            }
          },
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "user ID",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/BulkStatOperationResult"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "401": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20001</td><td>Unauthorized</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "403": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20013</td><td>insufficient permission</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "422": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20002</td><td>validation error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ValidationErrorEntity"
            }
          },
          "500": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20000</td><td>Internal server error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "Public bulk update user's statitems value",
        "tags": [
          "UserStatistic"
        ],
        "x-errorCodes": {
          "20000": "Internal server error",
          "20001": "Unauthorized",
          "20002": "validation error",
          "20013": "insufficient permission"
        },
        "x-security": {
          "userPermissions": "NAMESPACE:{namespace}:USER:{userId}:STATITEM [UPDATE]"
        }
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Public bulk update user&#39;s statitems value.&lt;br&gt;Other detail info:&lt;ul&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: bulk updated result&lt;/li&gt;&lt;/ul&gt;",
        "operationId": "publicBulkIncUserStatItem_1",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "items": {
                "$ref": "#/definitions/BulkStatItemInc"
              },
              "type": "array"
            }
          },
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "user ID",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/BulkStatOperationResult"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "401": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20001</td><td>Unauthorized</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "403": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20013</td><td>insufficient permission</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "422": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20002</td><td>validation error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ValidationErrorEntity"
            }
          },
          "500": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20000</td><td>Internal server error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "Public bulk update user's statitems value",
        "tags": [
          "UserStatistic"
        ],
        "x-errorCodes": {
          "20000": "Internal server error",
          "20001": "Unauthorized",
          "20002": "validation error",
          "20013": "insufficient permission"
        },
        "x-security": {
          "userPermissions": "NAMESPACE:{namespace}:USER:{userId}:STATITEM [UPDATE]"
        }
      }
    },
    "/social/v1/public/namespaces/{namespace}/users/{userId}/statitems/value/reset/bulk": {
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Public bulk reset user&#39;s statitems value for given namespace and user.  \nOther detail info:\n+ *Returns*: bulk updated result",
        "operationId": "bulkResetUserStatItem_3",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "items": {
                "$ref": "#/definitions/BulkStatItemReset"
              },
              "type": "array"
            }
          },
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "user ID",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/BulkStatOperationResult"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "401": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20001</td><td>Unauthorized</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "403": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20013</td><td>insufficient permission</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "422": {
            "description": "<table><tr><td>errorCode</td><td>errorMessage</td></tr><tr><td>20002</td><td>validation error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ValidationErrorEntity"
            }
          },
          "500": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20000</td><td>Internal server error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "Public bulk reset user's statitems value",
        "tags": [
          "UserStatistic"
        ],
        "x-errorCodes": {
          "20000": "Internal server error",
          "20001": "Unauthorized",
          "20002": "validation error",
          "20013": "insufficient permission"
        },
        "x-security": {
          "userPermissions": "NAMESPACE:{namespace}:USER:{userId}:STATITEM [UPDATE]"
        }
      }
    },
    "/social/v1/public/namespaces/{namespace}/users/{userId}/stats/{statCode}/statitems": {
      "delete": {
        "description": "Delete user&#39;s statItems given stat code.&lt;br&gt;Other detail info:&lt;ul&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: no content&lt;/li&gt;&lt;/li&gt;",
        "operationId": "deleteUserStatItems_1",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "stat code",
            "in": "path",
            "name": "statCode",
            "required": true,
            "type": "string"
          },
          {
            "description": "user ID",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "delete successfully"
          },
          "401": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20001</td><td>unauthorized access</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "403": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20013</td><td>insufficient permission</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "404": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>12242</td><td>Stat item of [{statCode}] of user [{profileId}] cannot be found in namespace [{namespace}]</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "422": {
            "description": "<table><tr><td>errorCode</td><td>errorMessage</td></tr><tr><td>20002</td><td>validation error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ValidationErrorEntity"
            }
          },
          "500": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20000</td><td>Internal server error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "Delete User's statItems",
        "tags": [
          "UserStatistic"
        ],
        "x-errorCodes": {
          "12242": "Stat item of [{statCode}] of user [{profileId}] cannot be found in namespace [{namespace}]",
          "20000": "Internal server error",
          "20001": "unauthorized access",
          "20002": "validation error",
          "20013": "insufficient permission"
        },
        "x-security": {
          "userPermissions": "NAMESPACE:{namespace}:USER:{userId}:STATITEM [DELETE]"
        }
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Create user&#39;s statItem.&lt;br&gt;Other detail info:&lt;ul&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: created user&#39;s statItem&lt;/li&gt;&lt;/ul&gt;",
        "operationId": "publicCreateUserStatItem",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "stat code",
            "in": "path",
            "name": "statCode",
            "required": true,
            "type": "string"
          },
          {
            "description": "user ID",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Create user statItem successfully"
          },
          "401": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20001</td><td>Unauthorized</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "403": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20013</td><td>insufficient permission</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "404": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>12241</td><td>Stat [{statCode}] cannot be found in namespace [{namespace}]</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "409": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>12274</td><td>Stat item with code [{statCode}] of user [{profileId}] already exists in namespace [{namespace}]</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "422": {
            "description": "<table><tr><td>errorCode</td><td>errorMessage</td></tr><tr><td>20002</td><td>validation error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ValidationErrorEntity"
            }
          },
          "500": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20000</td><td>Internal server error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "Create user's statItem",
        "tags": [
          "UserStatistic"
        ],
        "x-errorCodes": {
          "12241": "Stat [{statCode}] cannot be found in namespace [{namespace}]",
          "12274": "Stat item with code [{statCode}] of user [{profileId}] already exists in namespace [{namespace}]",
          "20000": "Internal server error",
          "20001": "Unauthorized",
          "20002": "validation error",
          "20013": "insufficient permission"
        },
        "x-security": {
          "userPermissions": "NAMESPACE:{namespace}:USER:{userId}:STATITEM [CREATE]"
        }
      }
    },
    "/social/v1/public/namespaces/{namespace}/users/{userId}/stats/{statCode}/statitems/value": {
      "patch": {
        "consumes": [
          "application/json"
        ],
        "description": "Public update user&#39;s statitem value.&lt;br&gt;Other detail info:&lt;ul&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: updated user&#39;s statItem&lt;/li&gt;&lt;/ul&gt;",
        "operationId": "publicIncUserStatItemValue",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StatItemInc"
            }
          },
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "stat code",
            "in": "path",
            "name": "statCode",
            "required": true,
            "type": "string"
          },
          {
            "description": "user ID",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/StatItemIncResult"
            }
          },
          "400": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>12221</td><td>Invalid stat operator, expect [{expected}] but actual [{actual}]</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "401": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20001</td><td>Unauthorized</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "403": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20013</td><td>insufficient permission</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "404": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>12241</td><td>Stat [{statCode}] cannot be found in namespace [{namespace}]</td></tr><tr><td>12242</td><td>Stat item of [{statCode}] of user [{profileId}] cannot be found in namespace [{namespace}]</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "409": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>12273</td><td>Stat [{statCode}] is not decreasable</td></tr><tr><td>12275</td><td>[{action}] value: [{value}] of stat [{statCode}]  is out of range while minimum [{minimum}] and maximum [{maximum}] in namespace [{namespace}]</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "422": {
            "description": "<table><tr><td>errorCode</td><td>errorMessage</td></tr><tr><td>20002</td><td>validation error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ValidationErrorEntity"
            }
          },
          "500": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20000</td><td>Internal server error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "Public update user's statitem value",
        "tags": [
          "UserStatistic"
        ],
        "x-errorCodes": {
          "12221": "Invalid stat operator, expect [{expected}] but actual [{actual}]",
          "12241": "Stat [{statCode}] cannot be found in namespace [{namespace}]",
          "12242": "Stat item of [{statCode}] of user [{profileId}] cannot be found in namespace [{namespace}]",
          "12273": "Stat [{statCode}] is not decreasable",
          "12275": "[{action}] value: [{value}] of stat [{statCode}]  is out of range while minimum [{minimum}] and maximum [{maximum}] in namespace [{namespace}]",
          "20000": "Internal server error",
          "20001": "Unauthorized",
          "20002": "validation error",
          "20013": "insufficient permission"
        },
        "x-security": {
          "userPermissions": "NAMESPACE:{namespace}:USER:{userId}:STATITEM [UPDATE]"
        }
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Public update user&#39;s statitem value.&lt;br&gt;Other detail info:&lt;ul&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: updated user&#39;s statItem&lt;/li&gt;&lt;/ul&gt;",
        "operationId": "publicIncUserStatItem",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StatItemInc"
            }
          },
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "stat code",
            "in": "path",
            "name": "statCode",
            "required": true,
            "type": "string"
          },
          {
            "description": "user ID",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/StatItemIncResult"
            }
          },
          "400": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>12221</td><td>Invalid stat operator, expect [{expected}] but actual [{actual}]</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "401": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20001</td><td>Unauthorized</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "403": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20013</td><td>insufficient permission</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "404": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>12241</td><td>Stat [{statCode}] cannot be found in namespace [{namespace}]</td></tr><tr><td>12242</td><td>Stat item of [{statCode}] of user [{profileId}] cannot be found in namespace [{namespace}]</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "409": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>12273</td><td>Stat [{statCode}] is not decreasable</td></tr><tr><td>12275</td><td>[{action}] value: [{value}] of stat [{statCode}]  is out of range while minimum [{minimum}] and maximum [{maximum}] in namespace [{namespace}]</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "422": {
            "description": "<table><tr><td>errorCode</td><td>errorMessage</td></tr><tr><td>20002</td><td>validation error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ValidationErrorEntity"
            }
          },
          "500": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20000</td><td>Internal server error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "Public update user's statitem value",
        "tags": [
          "UserStatistic"
        ],
        "x-errorCodes": {
          "12221": "Invalid stat operator, expect [{expected}] but actual [{actual}]",
          "12241": "Stat [{statCode}] cannot be found in namespace [{namespace}]",
          "12242": "Stat item of [{statCode}] of user [{profileId}] cannot be found in namespace [{namespace}]",
          "12273": "Stat [{statCode}] is not decreasable",
          "12275": "[{action}] value: [{value}] of stat [{statCode}]  is out of range while minimum [{minimum}] and maximum [{maximum}] in namespace [{namespace}]",
          "20000": "Internal server error",
          "20001": "Unauthorized",
          "20002": "validation error",
          "20013": "insufficient permission"
        },
        "x-security": {
          "userPermissions": "NAMESPACE:{namespace}:USER:{userId}:STATITEM [UPDATE]"
        }
      }
    },
    "/social/v1/public/namespaces/{namespace}/users/{userId}/stats/{statCode}/statitems/value/reset": {
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Reset user&#39;s statitem value for a given namespace and user.\nUser&#39;s statitem value will be reset to the default value defined in the statistic configuration.\n\nOther detail info:\n+ *Returns*: updated user&#39;s statItem",
        "operationId": "resetUserStatItemValue_1",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "stat code",
            "in": "path",
            "name": "statCode",
            "required": true,
            "type": "string"
          },
          {
            "description": "user ID",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/StatItemIncResult"
            }
          },
          "400": {
            "description": "<table><tr><td>errorCode</td><td>errorMessage</td></tr><tr><td>12221</td><td>Invalid stat operator, expect [{expected}] but actual [{actual}]</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "401": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20001</td><td>Unauthorized</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "403": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20013</td><td>insufficient permission</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "404": {
            "description": "<table><tr><td>errorCode</td><td>errorMessage</td></tr><tr><td>12241</td><td>Stat [{statCode}] cannot be found in namespace [{namespace}]</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "422": {
            "description": "<table><tr><td>errorCode</td><td>errorMessage</td></tr><tr><td>20002</td><td>validation error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ValidationErrorEntity"
            }
          },
          "500": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20000</td><td>Internal server error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "Public reset user's statitem value",
        "tags": [
          "UserStatistic"
        ],
        "x-errorCodes": {
          "12221": "Invalid stat operator, expect [{expected}] but actual [{actual}]",
          "12241": "Stat [{statCode}] cannot be found in namespace [{namespace}]",
          "20000": "Internal server error",
          "20001": "Unauthorized",
          "20002": "validation error",
          "20013": "insufficient permission"
        },
        "x-security": {
          "userPermissions": "NAMESPACE:{namespace}:USER:{userId}:STATITEM [UPDATE]"
        }
      }
    },
    "/social/v2/admin/namespaces/{namespace}/statitems/value/bulk": {
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Bulk update multiple user&#39;s statitems value with specific update strategy.  \nThere are four supported update strategies:\n+ *OVERRIDE*: update user statitem with the new value\n+ *INCREMENT*: increment user statitem with the specified value\n+ *MAX*: update user statitem with the specified value if it&#39;s larger than the existing value\n+ *MIN*: update user statitem with the specified value if it&#39;s lower than the existing value\n\nOther detail info:\n+ *Returns*: bulk updated result\n\n&lt;div style=&#34;border-left: 4px solid #f5a623; padding: 16px; background-color: #fffbea; font-family: Arial, sans-serif;&#34;&gt;\n    &lt;h3 style=&#34;margin-top: 0;&#34;&gt;⚠️ Important Note on Bulk Update Behavior&lt;/h3&gt;\n    &lt;p&gt;\n        To ensure data integrity and avoid inconsistencies or race conditions, it is crucial to make each user/update pair unique per request.\n        We strongly advise against including multiple updates for the same &lt;code&gt;userId&lt;/code&gt; with the same &lt;code&gt;statCode&lt;/code&gt; and/or &lt;code&gt;updateStrategy&lt;/code&gt; in a single request,\n        as bulk operations are &lt;strong&gt;processed concurrently&lt;/strong&gt;.\n    &lt;/p&gt;\n    &lt;p style=&#34;color: #c00;&#34;&gt;\n        &lt;strong&gt;Avoid including multiple entries with the same &lt;code&gt;userId&lt;/code&gt; and &lt;code&gt;statCode&lt;/code&gt; but different &lt;code&gt;updateStrategy&lt;/code&gt; values.&lt;/strong&gt;\n    &lt;/p&gt;\n    &lt;p&gt;\n        To apply multiple operations on the same stat, please batch or sequence them &lt;strong&gt;in separate requests&lt;/strong&gt;, according to your business logic.\n    &lt;/p&gt;\n\n    ❌ Incorrect Example:\n\n    [\n        {\n            &#34;userId&#34;: &#34;315a070e48a74dae903d559974e6513d&#34;,\n            &#34;statCode&#34;: &#34;exp&#34;,\n            &#34;updateStrategy&#34;: &#34;OVERRIDE&#34;,\n            &#34;value&#34;: 10\n        },\n        {\n            &#34;userId&#34;: &#34;315a070e48a74dae903d559974e6513d&#34;,\n            &#34;statCode&#34;: &#34;exp&#34;,\n            &#34;updateStrategy&#34;: &#34;INCREMENT&#34;,\n            &#34;value&#34;: 50\n        }\n    ]\n\n    ✅ Correct Example:\n\n    [\n        {\n            &#34;userId&#34;: &#34;315a070e48a74dae903d559974e6513d&#34;,\n            &#34;statCode&#34;: &#34;exp&#34;,\n            &#34;updateStrategy&#34;: &#34;INCREMENT&#34;,\n            &#34;value&#34;: 60\n        }\n    ]\n&lt;/div&gt;\n\n\n",
        "operationId": "bulkUpdateUserStatItemV2",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "items": {
                "$ref": "#/definitions/BulkUserStatItemUpdate"
              },
              "type": "array"
            }
          },
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/BulkStatOperationResult"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "401": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20001</td><td>unauthorized access</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "403": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20013</td><td>insufficient permission</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "422": {
            "description": "<table><tr><td>errorCode</td><td>errorMessage</td></tr><tr><td>20002</td><td>validation error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ValidationErrorEntity"
            }
          },
          "500": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20000</td><td>Internal server error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "Bulk update multiple user's statitems value",
        "tags": [
          "UserStatistic"
        ],
        "x-errorCodes": {
          "20000": "Internal server error",
          "20001": "unauthorized access",
          "20002": "validation error",
          "20013": "insufficient permission"
        },
        "x-security": {
          "userPermissions": "ADMIN:NAMESPACE:{namespace}:STATITEM [UPDATE]"
        }
      }
    },
    "/social/v2/admin/namespaces/{namespace}/statitems/value/bulk/getOrDefault": {
      "get": {
        "description": "Bulk fetch multiple user&#39;s stat item values for a given namespace and statCode.\nNOTE: If stat item does not exist, will return default value. Other detail info:\n+ *Returns*: list of user&#39;s stat item values",
        "operationId": "bulkFetchOrDefaultStatItems_1",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "stat code",
            "in": "query",
            "name": "statCode",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "description": "user ids",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "userIds",
            "required": true,
            "type": "array"
          },
          {
            "description": "additional key",
            "in": "query",
            "name": "additionalKey",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/A DTO object for user stat item value"
              },
              "type": "array"
            }
          },
          "401": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20001</td><td>unauthorized access</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "403": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20013</td><td>insufficient permission</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "404": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>12241</td><td>Stat [{statCode}] cannot be found in namespace [{namespace}]</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "422": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20002</td><td>validation error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ValidationErrorEntity"
            }
          },
          "500": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20000</td><td>Internal server error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "Bulk fetch user stat item values",
        "tags": [
          "UserStatistic"
        ],
        "x-errorCodes": {
          "12241": "Stat [{statCode}] cannot be found in namespace [{namespace}]",
          "20000": "Internal server error",
          "20001": "unauthorized access",
          "20002": "validation error",
          "20013": "insufficient permission"
        },
        "x-security": {
          "userPermissions": "ADMIN:NAMESPACE:{namespace}:STATITEM [READ]"
        }
      }
    },
    "/social/v2/admin/namespaces/{namespace}/users/{userId}/statitems/value/bulk": {
      "get": {
        "description": "Admin list all statItems of user&lt;br&gt;NOTE: &lt;b&gt;Legacy endpoint&lt;/b&gt;, please use POST /v2/admin/namespaces/{namespace}/users/{userId}/statitems/value/bulk/getOrDefault&lt;ul&gt;&lt;li&gt;If stat code does not exist, will ignore this stat code.&lt;/li&gt;&lt;li&gt;If stat item does not exist, will return default value&lt;/li&gt;&lt;/ul&gt;Other detail info:&lt;ul&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: stat items&lt;/li&gt;&lt;/ul&gt;",
        "operationId": "AdminListUsersStatItems",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "user id",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          },
          {
            "description": "additional key",
            "in": "query",
            "name": "additionalKey",
            "required": false,
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "description": "stat codes",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "statCodes",
            "required": false,
            "type": "array"
          },
          {
            "collectionFormat": "multi",
            "description": "tags",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "tags",
            "required": false,
            "type": "array"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/A DTO object for user stat item value"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>12223</td><td>Invalid stat codes in namespace [{namespace}]: [{statCodes}]</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "401": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20001</td><td>unauthorized access</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "403": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20013</td><td>insufficient permission</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "404": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>12243</td><td>Stats cannot be found in namespace [{namespace}]</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "422": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20002</td><td>validation error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ValidationErrorEntity"
            }
          },
          "500": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20000</td><td>Internal server error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "(Legacy) Admin list user's statItems",
        "tags": [
          "UserStatistic"
        ],
        "x-errorCodes": {
          "12223": "Invalid stat codes in namespace [{namespace}]: [{statCodes}]",
          "12243": "Stats cannot be found in namespace [{namespace}]",
          "20000": "Internal server error",
          "20001": "unauthorized access",
          "20002": "validation error",
          "20013": "insufficient permission"
        },
        "x-security": {
          "userPermissions": "ADMIN:NAMESPACE:{namespace}:STATITEM [READ]"
        }
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Bulk update user&#39;s statitems value for given namespace and user with specific update strategy.  \nThere are four supported update strategies:\n+ *OVERRIDE*: update user statitem with the new value\n+ *INCREMENT*: increment user statitem with the specified value\n+ *MAX*: update user statitem with the specified value if it&#39;s larger than the existing value\n+ *MIN*: update user statitem with the specified value if it&#39;s lower than the existing value\n\nThe *additionalKey* parameter will be suffixed to *userId* and is used to support multi level user&#39;s statitems, such as character&#39;s statitems. \nIf provided, user&#39;s statitems will be saved with key: *userId_additionalKey* \n\nOther detail info:\n+ *Returns*: bulk updated result\n\n&lt;div style=&#34;border-left: 4px solid #f5a623; padding: 16px; background-color: #fffbea; font-family: Arial, sans-serif;&#34;&gt;\n    &lt;h3 style=&#34;margin-top: 0;&#34;&gt;⚠️ Important Note on Bulk Update Behavior&lt;/h3&gt;\n    &lt;p&gt;\n        To ensure data integrity and avoid inconsistencies or race conditions, it is crucial to make each stat update unique per request.\n        We strongly advise against including multiple updates for the same &lt;code&gt;statCode&lt;/code&gt; with the same &lt;code&gt;updateStrategy&lt;/code&gt; in a single request,\n        as bulk operations are &lt;strong&gt;processed concurrently&lt;/strong&gt;.\n    &lt;/p&gt;\n    &lt;p style=&#34;color: #c00;&#34;&gt;\n        &lt;strong&gt;Avoid including multiple entries with the same &lt;code&gt;statCode&lt;/code&gt; but different &lt;code&gt;updateStrategy&lt;/code&gt; values.&lt;/strong&gt;\n    &lt;/p&gt;\n    &lt;p&gt;\n        To apply multiple operations on the same stat, please batch or sequence them &lt;strong&gt;in separate requests&lt;/strong&gt;, according to your business logic.\n    &lt;/p&gt;\n\n    ❌ Incorrect Example:\n\n    [\n        {\n            &#34;statCode&#34;: &#34;exp&#34;,\n            &#34;updateStrategy&#34;: &#34;OVERRIDE&#34;,\n            &#34;value&#34;: 10\n        },\n        {\n            &#34;statCode&#34;: &#34;exp&#34;,\n            &#34;updateStrategy&#34;: &#34;INCREMENT&#34;,\n            &#34;value&#34;: 50\n        }\n    ]\n\n    ✅ Correct Example:\n\n    [\n        {\n            &#34;statCode&#34;: &#34;exp&#34;,\n            &#34;updateStrategy&#34;: &#34;OVERRIDE&#34;,\n            &#34;value&#34;: 10\n        }.\n        {\n            &#34;statCode&#34;: &#34;headshot&#34;,\n            &#34;updateStrategy&#34;: &#34;INCREMENT&#34;,\n            &#34;value&#34;: 10\n        }\n    ]\n&lt;/div&gt;\n\n\n",
        "operationId": "bulkUpdateUserStatItem",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "items": {
                "$ref": "#/definitions/BulkStatItemUpdate"
              },
              "type": "array"
            }
          },
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "user ID",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          },
          {
            "description": "additional key",
            "in": "query",
            "name": "additionalKey",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/BulkStatOperationResult"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "401": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20001</td><td>unauthorized access</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "403": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20013</td><td>insufficient permission</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "422": {
            "description": "<table><tr><td>errorCode</td><td>errorMessage</td></tr><tr><td>20002</td><td>validation error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ValidationErrorEntity"
            }
          },
          "500": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20000</td><td>Internal server error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "Bulk update user's statitems value",
        "tags": [
          "UserStatistic"
        ],
        "x-errorCodes": {
          "20000": "Internal server error",
          "20001": "unauthorized access",
          "20002": "validation error",
          "20013": "insufficient permission"
        },
        "x-security": {
          "userPermissions": "ADMIN:NAMESPACE:{namespace}:USER:{userId}:STATITEM [UPDATE]"
        }
      }
    },
    "/social/v2/admin/namespaces/{namespace}/users/{userId}/statitems/value/bulk/getOrDefault": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Bulk get user&#39;s statitems value for given namespace and user by multiple stat codes.  \nWill return default value if player doesn&#39;t have the stat. \nOther detail info:\n+ *Required permission*: resource=&#34;ADMIN:NAMESPACE:{namespace}:USER:{userId}:STATITEM&#34;, action=2 (READ)\n+ *Max stat codes*: 20\n+ *Returns*: list of user&#39;s stat item values",
        "operationId": "bulkGetOrDefaultByUserId",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BulkUserStatItemByStatCodes"
            }
          },
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "user ID",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          },
          {
            "description": "additional key",
            "in": "query",
            "name": "additionalKey",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/A DTO object for user stat item value"
              },
              "type": "array"
            }
          },
          "401": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20001</td><td>unauthorized access</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "403": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20013</td><td>insufficient permission</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "422": {
            "description": "<table><tr><td>errorCode</td><td>errorMessage</td></tr><tr><td>20002</td><td>validation error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ValidationErrorEntity"
            }
          },
          "500": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20000</td><td>Internal server error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "Bulk get user's statitems value by user id and multiple stat codes",
        "tags": [
          "UserStatistic"
        ],
        "x-errorCodes": {
          "20000": "Internal server error",
          "20001": "unauthorized access",
          "20002": "validation error",
          "20013": "insufficient permission"
        },
        "x-security": {
          "userPermissions": "ADMIN:NAMESPACE:{namespace}:USER:{userId}:STATITEM [READ]"
        }
      }
    },
    "/social/v2/admin/namespaces/{namespace}/users/{userId}/statitems/value/reset/bulk": {
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Bulk reset user&#39;s statitem values for given namespace and user.  \nOther detail info:\n+ *Returns*: bulk updated result",
        "operationId": "bulkResetUserStatItemValues",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "items": {
                "$ref": "#/definitions/A DTO object for resetting user stat items"
              },
              "type": "array"
            }
          },
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "user ID",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          },
          {
            "description": "additional key",
            "in": "query",
            "name": "additionalKey",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/BulkStatOperationResult"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "401": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20001</td><td>unauthorized access</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "403": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20013</td><td>insufficient permission</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "422": {
            "description": "<table><tr><td>errorCode</td><td>errorMessage</td></tr><tr><td>20002</td><td>validation error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ValidationErrorEntity"
            }
          },
          "500": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20000</td><td>Internal server error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "Bulk reset user's statitem values",
        "tags": [
          "UserStatistic"
        ],
        "x-errorCodes": {
          "20000": "Internal server error",
          "20001": "unauthorized access",
          "20002": "validation error",
          "20013": "insufficient permission"
        },
        "x-security": {
          "userPermissions": "ADMIN:NAMESPACE:{namespace}:USER:{userId}:STATITEM [UPDATE]"
        }
      }
    },
    "/social/v2/admin/namespaces/{namespace}/users/{userId}/stats/{statCode}/statitems": {
      "delete": {
        "description": "Delete user&#39;s stat items for given namespace, statCode, and user Id. \nIf query param *additionalKey* is provided, it will delete user stat items of specific key (i.e. characterName). \nOtherwise, it will delete all stat items related to the user Id. \n&lt;br&gt;Delete user&#39;s statItems given stat code.&lt;br&gt;Other detail info:&lt;ul&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: no content&lt;/li&gt;&lt;/li&gt;",
        "operationId": "deleteUserStatItems_2",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "stat code",
            "in": "path",
            "name": "statCode",
            "required": true,
            "type": "string"
          },
          {
            "description": "user ID",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          },
          {
            "description": "additional key",
            "in": "query",
            "name": "additionalKey",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "delete successfully"
          },
          "401": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20001</td><td>unauthorized access</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "403": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20013</td><td>insufficient permission</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "404": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>12242</td><td>Stat item of [{statCode}] of user [{profileId}] cannot be found in namespace [{namespace}]</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "422": {
            "description": "<table><tr><td>errorCode</td><td>errorMessage</td></tr><tr><td>20002</td><td>validation error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ValidationErrorEntity"
            }
          },
          "500": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20000</td><td>Internal server error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "Delete User's statItems",
        "tags": [
          "UserStatistic"
        ],
        "x-errorCodes": {
          "12242": "Stat item of [{statCode}] of user [{profileId}] cannot be found in namespace [{namespace}]",
          "20000": "Internal server error",
          "20001": "unauthorized access",
          "20002": "validation error",
          "20013": "insufficient permission"
        },
        "x-security": {
          "userPermissions": "ADMIN:NAMESPACE:{namespace}:USER:{userId}:STATITEM [DELETE]"
        }
      }
    },
    "/social/v2/admin/namespaces/{namespace}/users/{userId}/stats/{statCode}/statitems/value": {
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Update user&#39;s statitem value for a given namespace and user with a certain update strategy.\nThere are four supported update strategies:\n+ *OVERRIDE*: update user statitem with the new value\n+ *INCREMENT*: increment user statitem with the specified value\n+ *MAX*: update user statitem with the specified value if it&#39;s larger than the existing value\n+ *MIN*: update user statitem with the specified value if it&#39;s lower than the existing value\n\nThe *additionalKey* parameter will be suffixed to *userId* and is used to support multi level user&#39;s statitems, such as character&#39;s statitems. \nIf provided, user&#39;s statitems will be saved with key: *userId_additionalKey* \n\nOther detail info:\n+ *Returns*: updated user&#39;s statItem",
        "operationId": "updateUserStatItemValue",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StatItemUpdate"
            }
          },
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "stat code",
            "in": "path",
            "name": "statCode",
            "required": true,
            "type": "string"
          },
          {
            "description": "user ID",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          },
          {
            "description": "additional key",
            "in": "query",
            "name": "additionalKey",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/StatItemIncResult"
            }
          },
          "400": {
            "description": "<table><tr><td>errorCode</td><td>errorMessage</td></tr><tr><td>12221</td><td>Invalid stat operator, expect [{expected}] but actual [{actual}]</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "401": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20001</td><td>unauthorized access</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "403": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20013</td><td>insufficient permission</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "404": {
            "description": "<table><tr><td>errorCode</td><td>errorMessage</td></tr><tr><td>12241</td><td>Stat [{statCode}] cannot be found in namespace [{namespace}]</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "409": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>12273</td><td>Stat [{statCode}] is not decreasable</td></tr><tr><td>12275</td><td>[{action}] value: [{value}] of stat [{statCode}] is out of range while minimum [{minimum}] and maximum [{maximum}] in namespace [{namespace}]</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "422": {
            "description": "<table><tr><td>errorCode</td><td>errorMessage</td></tr><tr><td>20002</td><td>validation error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ValidationErrorEntity"
            }
          },
          "500": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20000</td><td>Internal server error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "Update user's statitem value",
        "tags": [
          "UserStatistic"
        ],
        "x-errorCodes": {
          "12221": "Invalid stat operator, expect [{expected}] but actual [{actual}]",
          "12241": "Stat [{statCode}] cannot be found in namespace [{namespace}]",
          "12273": "Stat [{statCode}] is not decreasable",
          "12275": "[{action}] value: [{value}] of stat [{statCode}] is out of range while minimum [{minimum}] and maximum [{maximum}] in namespace [{namespace}]",
          "20000": "Internal server error",
          "20001": "unauthorized access",
          "20002": "validation error",
          "20013": "insufficient permission"
        },
        "x-security": {
          "userPermissions": "ADMIN:NAMESPACE:{namespace}:USER:{userId}:STATITEM [UPDATE]"
        }
      }
    },
    "/social/v2/public/namespaces/{namespace}/statitems/value/bulk": {
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Public bulk update multiple user&#39;s statitems value with specific update strategy.  \nThere are four supported update strategies:\n+ *OVERRIDE*: update user statitem with the new value\n+ *INCREMENT*: increment user statitem with the specified value\n+ *MAX*: update user statitem with the specified value if it&#39;s larger than the existing value\n+ *MIN*: update user statitem with the specified value if it&#39;s lower than the existing value\n\nOther detail info:\n+ *Returns*: bulk updated result\n\n&lt;div style=&#34;border-left: 4px solid #f5a623; padding: 16px; background-color: #fffbea; font-family: Arial, sans-serif;&#34;&gt;\n    &lt;h3 style=&#34;margin-top: 0;&#34;&gt;⚠️ Important Note on Bulk Update Behavior&lt;/h3&gt;\n    &lt;p&gt;\n        To ensure data integrity and avoid inconsistencies or race conditions, it is crucial to make each user/update pair unique per request.\n        We strongly advise against including multiple updates for the same &lt;code&gt;userId&lt;/code&gt; with the same &lt;code&gt;statCode&lt;/code&gt; and/or &lt;code&gt;updateStrategy&lt;/code&gt; in a single request,\n        as bulk operations are &lt;strong&gt;processed concurrently&lt;/strong&gt;.\n    &lt;/p&gt;\n    &lt;p style=&#34;color: #c00;&#34;&gt;\n        &lt;strong&gt;Avoid including multiple entries with the same &lt;code&gt;userId&lt;/code&gt; and &lt;code&gt;statCode&lt;/code&gt; but different &lt;code&gt;updateStrategy&lt;/code&gt; values.&lt;/strong&gt;\n    &lt;/p&gt;\n    &lt;p&gt;\n        To apply multiple operations on the same stat, please batch or sequence them &lt;strong&gt;in separate requests&lt;/strong&gt;, according to your business logic.\n    &lt;/p&gt;\n\n    ❌ Incorrect Example:\n\n    [\n        {\n            &#34;userId&#34;: &#34;315a070e48a74dae903d559974e6513d&#34;,\n            &#34;statCode&#34;: &#34;exp&#34;,\n            &#34;updateStrategy&#34;: &#34;OVERRIDE&#34;,\n            &#34;value&#34;: 10\n        },\n        {\n            &#34;userId&#34;: &#34;315a070e48a74dae903d559974e6513d&#34;,\n            &#34;statCode&#34;: &#34;exp&#34;,\n            &#34;updateStrategy&#34;: &#34;INCREMENT&#34;,\n            &#34;value&#34;: 50\n        }\n    ]\n\n    ✅ Correct Example:\n\n    [\n        {\n            &#34;userId&#34;: &#34;315a070e48a74dae903d559974e6513d&#34;,\n            &#34;statCode&#34;: &#34;exp&#34;,\n            &#34;updateStrategy&#34;: &#34;INCREMENT&#34;,\n            &#34;value&#34;: 60\n        }\n    ]\n&lt;/div&gt;\n\n\n",
        "operationId": "bulkUpdateUserStatItem_1",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "items": {
                "$ref": "#/definitions/BulkUserStatItemUpdate"
              },
              "type": "array"
            }
          },
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/BulkStatOperationResult"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "401": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20001</td><td>unauthorized access</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "403": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20013</td><td>insufficient permission</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "422": {
            "description": "<table><tr><td>errorCode</td><td>errorMessage</td></tr><tr><td>20002</td><td>validation error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ValidationErrorEntity"
            }
          },
          "500": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20000</td><td>Internal server error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "Public bulk update multiple user's statitems value",
        "tags": [
          "UserStatistic"
        ],
        "x-errorCodes": {
          "20000": "Internal server error",
          "20001": "unauthorized access",
          "20002": "validation error",
          "20013": "insufficient permission"
        },
        "x-security": {
          "userPermissions": "NAMESPACE:{namespace}:STATITEM [UPDATE]"
        }
      }
    },
    "/social/v2/public/namespaces/{namespace}/users/{userId}/statitems/value/bulk": {
      "get": {
        "description": "Public list all statItems of user.&lt;br&gt;NOTE: &lt;li&gt;If stat code does not exist, will ignore this stat code.&lt;/li&gt;&lt;li&gt;If stat item does not exist, will return default value&lt;/li&gt;&lt;/ul&gt;Other detail info:&lt;ul&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: stat items&lt;/li&gt;&lt;/ul&gt;",
        "operationId": "publicQueryUserStatItems_2",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "user id",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          },
          {
            "description": "additional key",
            "in": "query",
            "name": "additionalKey",
            "required": false,
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "description": "stat codes",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "statCodes",
            "required": false,
            "type": "array"
          },
          {
            "collectionFormat": "multi",
            "description": "tags",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "tags",
            "required": false,
            "type": "array"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/A DTO object for user stat item value"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>12223</td><td>Invalid stat codes in namespace [{namespace}]: [{statCodes}]</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "401": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20001</td><td>unauthorized access</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "403": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20013</td><td>insufficient permission</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "404": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>12243</td><td>Stats cannot be found in namespace [{namespace}]</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "422": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20002</td><td>validation error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ValidationErrorEntity"
            }
          },
          "500": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20000</td><td>Internal server error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "Public list user's statItems",
        "tags": [
          "UserStatistic"
        ],
        "x-errorCodes": {
          "12223": "Invalid stat codes in namespace [{namespace}]: [{statCodes}]",
          "12243": "Stats cannot be found in namespace [{namespace}]",
          "20000": "Internal server error",
          "20001": "unauthorized access",
          "20002": "validation error",
          "20013": "insufficient permission"
        },
        "x-security": {
          "userPermissions": "NAMESPACE:{namespace}:USER:{userId}:STATITEM [READ]"
        }
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Public bulk update user&#39;s statitems value for given namespace and user with specific update strategy.  \nThere are four supported update strategies:\n+ *OVERRIDE*: update user statitem with the new value\n+ *INCREMENT*: increment user statitem with the specified value\n+ *MAX*: update user statitem with the specified value if it&#39;s larger than the existing value\n+ *MIN*: update user statitem with the specified value if it&#39;s lower than the existing value\n\nThe *additionalKey* parameter will be suffixed to *userId* and is used to support multi level user&#39;s statitems, such as character&#39;s statitems. \nIf provided, user&#39;s statitems will be saved with key: *userId_additionalKey* \n\nOther detail info:\n+ *Returns*: bulk updated result\n\n&lt;div style=&#34;border-left: 4px solid #f5a623; padding: 16px; background-color: #fffbea; font-family: Arial, sans-serif;&#34;&gt;\n    &lt;h3 style=&#34;margin-top: 0;&#34;&gt;⚠️ Important Note on Bulk Update Behavior&lt;/h3&gt;\n    &lt;p&gt;\n        To ensure data integrity and avoid inconsistencies or race conditions, it is crucial to make each stat update unique per request.\n        We strongly advise against including multiple updates for the same &lt;code&gt;statCode&lt;/code&gt; with the same &lt;code&gt;updateStrategy&lt;/code&gt; in a single request,\n        as bulk operations are &lt;strong&gt;processed concurrently&lt;/strong&gt;.\n    &lt;/p&gt;\n    &lt;p style=&#34;color: #c00;&#34;&gt;\n        &lt;strong&gt;Avoid including multiple entries with the same &lt;code&gt;statCode&lt;/code&gt; but different &lt;code&gt;updateStrategy&lt;/code&gt; values.&lt;/strong&gt;\n    &lt;/p&gt;\n    &lt;p&gt;\n        To apply multiple operations on the same stat, please batch or sequence them &lt;strong&gt;in separate requests&lt;/strong&gt;, according to your business logic.\n    &lt;/p&gt;\n\n    ❌ Incorrect Example:\n\n    [\n        {\n            &#34;statCode&#34;: &#34;exp&#34;,\n            &#34;updateStrategy&#34;: &#34;OVERRIDE&#34;,\n            &#34;value&#34;: 10\n        },\n        {\n            &#34;statCode&#34;: &#34;exp&#34;,\n            &#34;updateStrategy&#34;: &#34;INCREMENT&#34;,\n            &#34;value&#34;: 50\n        }\n    ]\n\n    ✅ Correct Example:\n\n    [\n        {\n            &#34;statCode&#34;: &#34;exp&#34;,\n            &#34;updateStrategy&#34;: &#34;OVERRIDE&#34;,\n            &#34;value&#34;: 10\n        }.\n        {\n            &#34;statCode&#34;: &#34;headshot&#34;,\n            &#34;updateStrategy&#34;: &#34;INCREMENT&#34;,\n            &#34;value&#34;: 10\n        }\n    ]\n&lt;/div&gt;\n\n\n",
        "operationId": "bulkUpdateUserStatItem_2",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "items": {
                "$ref": "#/definitions/BulkStatItemUpdate"
              },
              "type": "array"
            }
          },
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "user ID",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          },
          {
            "description": "additional key",
            "in": "query",
            "name": "additionalKey",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/BulkStatOperationResult"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "401": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20001</td><td>unauthorized access</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "403": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20013</td><td>insufficient permission</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "422": {
            "description": "<table><tr><td>errorCode</td><td>errorMessage</td></tr><tr><td>20002</td><td>validation error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ValidationErrorEntity"
            }
          },
          "500": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20000</td><td>Internal server error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "Public bulk update user's statitems value",
        "tags": [
          "UserStatistic"
        ],
        "x-errorCodes": {
          "20000": "Internal server error",
          "20001": "unauthorized access",
          "20002": "validation error",
          "20013": "insufficient permission"
        },
        "x-security": {
          "userPermissions": "NAMESPACE:{namespace}:USER:{userId}:STATITEM [UPDATE]"
        }
      }
    },
    "/social/v2/public/namespaces/{namespace}/users/{userId}/stats/{statCode}/statitems/value": {
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Public update user&#39;s statitem value for a given namespace and user with a certain update strategy. \nThere are four supported update strategies:\n+ *OVERRIDE*: update user statitem with the new value\n+ *INCREMENT*: increment user statitem with the specified value\n+ *MAX*: update user statitem with the specified value if it&#39;s larger than the existing value\n+ *MIN*: update user statitem with the specified value if it&#39;s lower than the existing value\n\nThe *additionalKey* parameter will be suffixed to *userId* and is used to support multi level user&#39;s statitems, such as character&#39;s statitems. \nIf provided, user&#39;s statitems will be saved with key: *userId_additionalKey* \n\nOther detail info:\n+ *Returns*: updated user&#39;s statItem",
        "operationId": "updateUserStatItemValue_1",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StatItemUpdate"
            }
          },
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "stat code",
            "in": "path",
            "name": "statCode",
            "required": true,
            "type": "string"
          },
          {
            "description": "user ID",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          },
          {
            "description": "additional key",
            "in": "query",
            "name": "additionalKey",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/StatItemIncResult"
            }
          },
          "400": {
            "description": "<table><tr><td>errorCode</td><td>errorMessage</td></tr><tr><td>12221</td><td>Invalid stat operator, expect [{expected}] but actual [{actual}]</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "401": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20001</td><td>unauthorized access</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "403": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20013</td><td>insufficient permission</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "404": {
            "description": "<table><tr><td>errorCode</td><td>errorMessage</td></tr><tr><td>12241</td><td>Stat [{statCode}] cannot be found in namespace [{namespace}]</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "409": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>12273</td><td>Stat [{statCode}] is not decreasable</td></tr><tr><td>12275</td><td>[{action}] value: [{value}] of stat [{statCode}] is out of range while minimum [{minimum}] and maximum [{maximum}] in namespace [{namespace}]</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "422": {
            "description": "<table><tr><td>errorCode</td><td>errorMessage</td></tr><tr><td>20002</td><td>validation error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ValidationErrorEntity"
            }
          },
          "500": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20000</td><td>Internal server error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          }
        ],
        "summary": "Public update user's statitem value",
        "tags": [
          "UserStatistic"
        ],
        "x-errorCodes": {
          "12221": "Invalid stat operator, expect [{expected}] but actual [{actual}]",
          "12241": "Stat [{statCode}] cannot be found in namespace [{namespace}]",
          "12273": "Stat [{statCode}] is not decreasable",
          "12275": "[{action}] value: [{value}] of stat [{statCode}] is out of range while minimum [{minimum}] and maximum [{maximum}] in namespace [{namespace}]",
          "20000": "Internal server error",
          "20001": "unauthorized access",
          "20002": "validation error",
          "20013": "insufficient permission"
        },
        "x-security": {
          "userPermissions": "NAMESPACE:{namespace}:USER:{userId}:STATITEM [UPDATE]"
        }
      }
    }
  },
  "definitions": {
    "A DTO object for resetting user stat items": {
      "properties": {
        "additionalData": {
          "additionalProperties": {
            "type": "object"
          },
          "description": "additional data to be published in event payload",
          "type": "object"
        },
        "statCode": {
          "description": "stat code",
          "type": "string"
        }
      },
      "required": [
        "statCode"
      ],
      "type": "object"
    },
    "A DTO object for user stat item value": {
      "properties": {
        "profileId": {
          "description": "profile id",
          "type": "string"
        },
        "statCode": {
          "description": "stat code",
          "type": "string"
        },
        "value": {
          "description": "current value",
          "format": "double",
          "type": "number"
        }
      },
      "type": "object"
    },
    "Attribute": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "BulkCycleStatsAdd": {
      "properties": {
        "statCodes": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": [
        "statCodes"
      ],
      "type": "object"
    },
    "BulkStatCycleOperationResult": {
      "properties": {
        "cycleId": {
          "type": "string"
        },
        "details": {
          "type": "object"
        },
        "statCode": {
          "type": "string"
        },
        "success": {
          "type": "boolean",
          "x-omitempty": false
        }
      },
      "type": "object"
    },
    "BulkStatCycleRequest": {
      "properties": {
        "cycleIds": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "uniqueItems": true
        }
      },
      "required": [
        "cycleIds"
      ],
      "type": "object"
    },
    "BulkStatCycleResult": {
      "properties": {
        "data": {
          "items": {
            "$ref": "#/definitions/StatCycleInfo"
          },
          "type": "array"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "BulkStatItemCreate": {
      "properties": {
        "statCode": {
          "type": "string"
        }
      },
      "required": [
        "statCode"
      ],
      "type": "object"
    },
    "BulkStatItemInc": {
      "properties": {
        "inc": {
          "format": "double",
          "type": "number"
        },
        "statCode": {
          "type": "string"
        }
      },
      "required": [
        "statCode"
      ],
      "type": "object"
    },
    "BulkStatItemReset": {
      "properties": {
        "statCode": {
          "type": "string"
        }
      },
      "required": [
        "statCode"
      ],
      "type": "object"
    },
    "BulkStatItemUpdate": {
      "properties": {
        "additionalData": {
          "additionalProperties": {
            "type": "object"
          },
          "description": "Additional data to be published in event payload",
          "type": "object"
        },
        "statCode": {
          "type": "string"
        },
        "updateStrategy": {
          "enum": [
            "INCREMENT",
            "MAX",
            "MIN",
            "OVERRIDE"
          ],
          "type": "string"
        },
        "value": {
          "format": "double",
          "type": "number"
        }
      },
      "required": [
        "statCode",
        "updateStrategy",
        "value"
      ],
      "type": "object"
    },
    "BulkStatOperationResult": {
      "properties": {
        "details": {
          "type": "object"
        },
        "statCode": {
          "type": "string"
        },
        "success": {
          "type": "boolean",
          "x-omitempty": false
        },
        "userId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "BulkUserStatItemByStatCodes": {
      "properties": {
        "statCodes": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "uniqueItems": true
        }
      },
      "type": "object"
    },
    "BulkUserStatItemInc": {
      "properties": {
        "inc": {
          "format": "double",
          "type": "number"
        },
        "statCode": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        }
      },
      "required": [
        "statCode",
        "userId"
      ],
      "type": "object"
    },
    "BulkUserStatItemReset": {
      "properties": {
        "statCode": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        }
      },
      "required": [
        "statCode",
        "userId"
      ],
      "type": "object"
    },
    "BulkUserStatItemUpdate": {
      "properties": {
        "additionalData": {
          "additionalProperties": {
            "type": "object"
          },
          "description": "Additional data to be published in event payload",
          "type": "object"
        },
        "additionalKey": {
          "description": "Additional key to identify multi level user's statitems, e.g. character's statitems",
          "type": "string"
        },
        "statCode": {
          "type": "string"
        },
        "updateStrategy": {
          "enum": [
            "INCREMENT",
            "MAX",
            "MIN",
            "OVERRIDE"
          ],
          "type": "string"
        },
        "userId": {
          "type": "string"
        },
        "value": {
          "format": "double",
          "type": "number"
        }
      },
      "required": [
        "statCode",
        "updateStrategy",
        "userId",
        "value"
      ],
      "type": "object"
    },
    "CycleOverride": {
      "properties": {
        "cycleId": {
          "type": "string"
        },
        "maximum": {
          "format": "double",
          "type": "number"
        },
        "minimum": {
          "format": "double",
          "type": "number"
        }
      },
      "type": "object"
    },
    "CycleOverrideRequest": {
      "properties": {
        "cycleId": {
          "type": "string"
        },
        "maximum": {
          "format": "double",
          "type": "number"
        },
        "minimum": {
          "format": "double",
          "type": "number"
        }
      },
      "required": [
        "cycleId"
      ],
      "type": "object"
    },
    "ErrorEntity": {
      "properties": {
        "devStackTrace": {
          "description": "internal server error stack trace in configured environment",
          "type": "string"
        },
        "errorCode": {
          "description": "numeric error code",
          "format": "int32",
          "type": "integer"
        },
        "errorMessage": {
          "description": "error message",
          "type": "string"
        },
        "messageVariables": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "message variables",
          "type": "object"
        },
        "requiredPermission": {
          "$ref": "#/definitions/Permission"
        }
      },
      "required": [
        "errorCode",
        "errorMessage"
      ],
      "type": "object"
    },
    "FieldValidationError": {
      "properties": {
        "errorCode": {
          "type": "string"
        },
        "errorField": {
          "type": "string"
        },
        "errorMessage": {
          "type": "string"
        },
        "errorValue": {
          "type": "string"
        },
        "messageVariables": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "GameProfileHeader": {
      "properties": {
        "avatarUrl": {
          "type": "string"
        },
        "label": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "profileId": {
          "type": "string"
        },
        "profileName": {
          "type": "string"
        },
        "tags": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "userId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "GameProfileInfo": {
      "properties": {
        "achievements": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "attributes": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "avatarUrl": {
          "type": "string"
        },
        "inventories": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "label": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "profileId": {
          "type": "string"
        },
        "profileName": {
          "type": "string"
        },
        "statistics": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "tags": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "userId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "GameProfilePublicInfo": {
      "properties": {
        "avatarUrl": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "profileId": {
          "type": "string"
        },
        "profileName": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "GameProfileRequest": {
      "properties": {
        "achievements": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "attributes": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "avatarUrl": {
          "type": "string"
        },
        "inventories": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "label": {
          "type": "string"
        },
        "profileName": {
          "type": "string"
        },
        "statistics": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "tags": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "GlobalStatItemInfo": {
      "properties": {
        "createdAt": {
          "format": "date-time",
          "type": "string",
          "x-nullable": false
        },
        "globalAggregationMethod": {
          "enum": [
            "LAST",
            "MAX",
            "MIN",
            "TOTAL"
          ],
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "statCode": {
          "type": "string"
        },
        "statName": {
          "type": "string"
        },
        "tags": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "uniqueItems": true
        },
        "updatedAt": {
          "format": "date-time",
          "type": "string",
          "x-nullable": false
        },
        "value": {
          "format": "double",
          "type": "number"
        }
      },
      "required": [
        "createdAt",
        "namespace",
        "statCode",
        "statName",
        "updatedAt",
        "value"
      ],
      "type": "object"
    },
    "GlobalStatItemPagingSlicedResult": {
      "properties": {
        "data": {
          "items": {
            "$ref": "#/definitions/GlobalStatItemInfo"
          },
          "type": "array"
        },
        "paging": {
          "$ref": "#/definitions/Paging"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "NamespaceSlotConfigInfo": {
      "properties": {
        "maxSlotSize": {
          "format": "int32",
          "type": "integer"
        },
        "maxSlots": {
          "format": "int32",
          "type": "integer"
        },
        "namespace": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "Paging": {
      "properties": {
        "next": {
          "type": "string"
        },
        "previous": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "Permission": {
      "properties": {
        "action": {
          "format": "int32",
          "type": "integer"
        },
        "resource": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "SlotConfigUpdate": {
      "properties": {
        "maxSlotSize": {
          "format": "int32",
          "type": "integer"
        },
        "maxSlots": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "SlotInfo": {
      "properties": {
        "checksum": {
          "description": "base64 encoded md5",
          "type": "string"
        },
        "customAttribute": {
          "type": "string"
        },
        "dateAccessed": {
          "format": "date-time",
          "type": "string",
          "x-nullable": true
        },
        "dateCreated": {
          "format": "date-time",
          "type": "string",
          "x-nullable": true
        },
        "dateModified": {
          "format": "date-time",
          "type": "string",
          "x-nullable": true
        },
        "label": {
          "type": "string"
        },
        "mimeType": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "originalName": {
          "type": "string"
        },
        "size": {
          "format": "int64",
          "type": "integer"
        },
        "slotId": {
          "type": "string"
        },
        "storedName": {
          "type": "string"
        },
        "tags": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "userId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "SlotMetadataUpdate": {
      "properties": {
        "customAttribute": {
          "type": "string"
        },
        "label": {
          "type": "string"
        },
        "tags": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "StatCreate": {
      "properties": {
        "capCycleOverride": {
          "description": "The field used to define cap behavior of stat cycle min/max override.\nIf set to false, all stat cycle and stat item will continue as is if one stat cycle is capped on its min/max.\nIf set to true, all stat cycle and stat item cannot continue if one of stat cycle is capped on its min/max",
          "type": "boolean",
          "x-omitempty": false
        },
        "cycleIds": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "uniqueItems": true
        },
        "cycleOverrides": {
          "items": {
            "$ref": "#/definitions/CycleOverrideRequest"
          },
          "type": "array",
          "uniqueItems": true
        },
        "defaultValue": {
          "format": "double",
          "type": "number"
        },
        "description": {
          "type": "string"
        },
        "globalAggregationMethod": {
          "description": "The aggregation method for global stat, default TOTAL",
          "enum": [
            "LAST",
            "MAX",
            "MIN",
            "TOTAL"
          ],
          "type": "string"
        },
        "ignoreAdditionalDataOnValueRejected": {
          "type": "boolean",
          "x-omitempty": false
        },
        "incrementOnly": {
          "type": "boolean",
          "x-omitempty": false
        },
        "isPublic": {
          "type": "boolean",
          "x-omitempty": false
        },
        "maximum": {
          "description": "default value is 1.7976931348623157e+308",
          "format": "double",
          "type": "number"
        },
        "minimum": {
          "description": "default value is 0.0",
          "format": "double",
          "type": "number"
        },
        "name": {
          "type": "string"
        },
        "setAsGlobal": {
          "type": "boolean",
          "x-omitempty": false
        },
        "setBy": {
          "enum": [
            "CLIENT",
            "SERVER"
          ],
          "type": "string"
        },
        "statCode": {
          "type": "string"
        },
        "tags": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "uniqueItems": true
        },
        "visibility": {
          "description": "The visibility for a stat, the default SHOWALL",
          "enum": [
            "SERVERONLY",
            "SHOWALL"
          ],
          "type": "string"
        }
      },
      "required": [
        "defaultValue",
        "name",
        "setBy",
        "statCode"
      ],
      "type": "object"
    },
    "StatCycleCreate": {
      "properties": {
        "cycleType": {
          "description": "Cycle Type",
          "enum": [
            "ANNUALLY",
            "DAILY",
            "MONTHLY",
            "SEASONAL",
            "WEEKLY"
          ],
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "end": {
          "description": "end date time",
          "format": "date-time",
          "type": "string",
          "x-nullable": true
        },
        "id": {
          "description": "cycle id",
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "resetDate": {
          "description": "reset date",
          "format": "int32",
          "type": "integer"
        },
        "resetDay": {
          "description": "reset day of week",
          "format": "int32",
          "type": "integer"
        },
        "resetMonth": {
          "description": "reset month",
          "format": "int32",
          "type": "integer"
        },
        "resetTime": {
          "type": "string"
        },
        "seasonPeriod": {
          "description": "season period",
          "format": "int32",
          "type": "integer"
        },
        "start": {
          "description": "start date time",
          "format": "date-time",
          "type": "string",
          "x-nullable": false
        }
      },
      "required": [
        "cycleType",
        "name",
        "resetTime",
        "start"
      ],
      "type": "object"
    },
    "StatCycleInfo": {
      "properties": {
        "createdAt": {
          "format": "date-time",
          "type": "string",
          "x-nullable": false
        },
        "currentVersion": {
          "format": "int32",
          "type": "integer"
        },
        "cycleType": {
          "enum": [
            "ANNUALLY",
            "DAILY",
            "MONTHLY",
            "SEASONAL",
            "WEEKLY"
          ],
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "end": {
          "format": "date-time",
          "type": "string",
          "x-nullable": true
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "nextReset": {
          "format": "date-time",
          "type": "string",
          "x-nullable": true
        },
        "resetDate": {
          "format": "int32",
          "type": "integer"
        },
        "resetDay": {
          "format": "int32",
          "type": "integer"
        },
        "resetMonth": {
          "format": "int32",
          "type": "integer"
        },
        "resetTime": {
          "type": "string"
        },
        "seasonPeriod": {
          "format": "int32",
          "type": "integer"
        },
        "start": {
          "format": "date-time",
          "type": "string",
          "x-nullable": false
        },
        "status": {
          "enum": [
            "ACTIVE",
            "INIT",
            "STOPPED"
          ],
          "type": "string"
        },
        "updatedAt": {
          "format": "date-time",
          "type": "string",
          "x-nullable": false
        }
      },
      "required": [
        "createdAt",
        "currentVersion",
        "cycleType",
        "id",
        "name",
        "namespace",
        "resetTime",
        "start",
        "status",
        "updatedAt"
      ],
      "type": "object"
    },
    "StatCyclePagingSlicedResult": {
      "properties": {
        "data": {
          "items": {
            "$ref": "#/definitions/StatCycleInfo"
          },
          "type": "array"
        },
        "paging": {
          "$ref": "#/definitions/Paging"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "StatCycleUpdate": {
      "properties": {
        "cycleType": {
          "description": "Cycle Type",
          "enum": [
            "ANNUALLY",
            "DAILY",
            "MONTHLY",
            "SEASONAL",
            "WEEKLY"
          ],
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "end": {
          "description": "end date time",
          "format": "date-time",
          "type": "string",
          "x-nullable": true
        },
        "name": {
          "type": "string"
        },
        "resetDate": {
          "description": "reset date",
          "format": "int32",
          "type": "integer"
        },
        "resetDay": {
          "description": "reset day of week",
          "format": "int32",
          "type": "integer"
        },
        "resetMonth": {
          "description": "reset month",
          "format": "int32",
          "type": "integer"
        },
        "resetTime": {
          "type": "string"
        },
        "seasonPeriod": {
          "description": "season period",
          "format": "int32",
          "type": "integer"
        },
        "start": {
          "description": "start date time",
          "format": "date-time",
          "type": "string",
          "x-nullable": false
        }
      },
      "required": [
        "cycleType",
        "name",
        "resetTime",
        "start"
      ],
      "type": "object"
    },
    "StatImportInfo": {
      "properties": {
        "failedConfigs": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "ignoredConfigs": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "newConfigs": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "replacedConfigs": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": [
        "failedConfigs",
        "ignoredConfigs",
        "newConfigs",
        "replacedConfigs"
      ],
      "type": "object"
    },
    "StatInfo": {
      "properties": {
        "capCycleOverride": {
          "type": "boolean",
          "x-omitempty": false
        },
        "createdAt": {
          "format": "date-time",
          "type": "string",
          "x-nullable": false
        },
        "cycleIds": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "uniqueItems": true
        },
        "cycleOverrides": {
          "items": {
            "$ref": "#/definitions/CycleOverride"
          },
          "type": "array",
          "uniqueItems": true
        },
        "defaultValue": {
          "format": "double",
          "type": "number"
        },
        "description": {
          "type": "string"
        },
        "globalAggregationMethod": {
          "enum": [
            "LAST",
            "MAX",
            "MIN",
            "TOTAL"
          ],
          "type": "string"
        },
        "ignoreAdditionalDataOnValueRejected": {
          "type": "boolean",
          "x-omitempty": false
        },
        "incrementOnly": {
          "type": "boolean",
          "x-omitempty": false
        },
        "isPublic": {
          "type": "boolean",
          "x-omitempty": false
        },
        "maximum": {
          "format": "double",
          "type": "number"
        },
        "minimum": {
          "format": "double",
          "type": "number"
        },
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "setAsGlobal": {
          "type": "boolean",
          "x-omitempty": false
        },
        "setBy": {
          "enum": [
            "CLIENT",
            "SERVER"
          ],
          "type": "string"
        },
        "statCode": {
          "type": "string"
        },
        "status": {
          "enum": [
            "INIT",
            "TIED"
          ],
          "type": "string"
        },
        "tags": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "uniqueItems": true
        },
        "updatedAt": {
          "format": "date-time",
          "type": "string",
          "x-nullable": false
        },
        "visibility": {
          "enum": [
            "SERVERONLY",
            "SHOWALL"
          ],
          "type": "string"
        }
      },
      "required": [
        "createdAt",
        "defaultValue",
        "ignoreAdditionalDataOnValueRejected",
        "incrementOnly",
        "isPublic",
        "name",
        "namespace",
        "setAsGlobal",
        "setBy",
        "statCode",
        "status",
        "updatedAt"
      ],
      "type": "object"
    },
    "StatItemInc": {
      "properties": {
        "inc": {
          "format": "double",
          "type": "number"
        }
      },
      "type": "object"
    },
    "StatItemIncResult": {
      "properties": {
        "currentValue": {
          "format": "double",
          "type": "number"
        }
      },
      "required": [
        "currentValue"
      ],
      "type": "object"
    },
    "StatItemUpdate": {
      "properties": {
        "additionalData": {
          "additionalProperties": {
            "type": "object"
          },
          "description": "Additional data to be published in event payload",
          "type": "object"
        },
        "updateStrategy": {
          "enum": [
            "INCREMENT",
            "MAX",
            "MIN",
            "OVERRIDE"
          ],
          "type": "string"
        },
        "value": {
          "format": "double",
          "type": "number"
        }
      },
      "required": [
        "updateStrategy",
        "value"
      ],
      "type": "object"
    },
    "StatItemValue": {
      "properties": {
        "createdAt": {
          "description": "created at",
          "format": "date-time",
          "type": "string",
          "x-nullable": true
        },
        "updatedAt": {
          "description": "updated at",
          "format": "date-time",
          "type": "string",
          "x-nullable": true
        },
        "userId": {
          "description": "user id",
          "type": "string"
        },
        "value": {
          "description": "current value",
          "format": "double",
          "type": "number"
        }
      },
      "type": "object"
    },
    "StatItemValuePagingSlicedResult": {
      "properties": {
        "data": {
          "items": {
            "$ref": "#/definitions/StatItemValue"
          },
          "type": "array"
        },
        "paging": {
          "$ref": "#/definitions/Paging"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "StatPagingSlicedResult": {
      "properties": {
        "data": {
          "items": {
            "$ref": "#/definitions/StatInfo"
          },
          "type": "array"
        },
        "paging": {
          "$ref": "#/definitions/Paging"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "StatResetInfo": {
      "properties": {
        "additionalData": {
          "additionalProperties": {
            "type": "object"
          },
          "description": "Additional data to be published in event payload",
          "type": "object"
        }
      },
      "type": "object"
    },
    "StatUpdate": {
      "properties": {
        "capCycleOverride": {
          "description": "The field used to define cap behavior of stat cycle min/max override.\nIf set to false, all stat cycle and stat item will continue as is if one stat cycle is capped on its min/max.\nIf set to true, all stat cycle and stat item cannot continue if one of stat cycle is capped on its min/max",
          "type": "boolean",
          "x-omitempty": false
        },
        "cycleIds": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "uniqueItems": true
        },
        "cycleOverrides": {
          "items": {
            "$ref": "#/definitions/CycleOverrideRequest"
          },
          "type": "array",
          "uniqueItems": true
        },
        "defaultValue": {
          "format": "double",
          "type": "number"
        },
        "description": {
          "type": "string"
        },
        "globalAggregationMethod": {
          "enum": [
            "LAST",
            "MAX",
            "MIN",
            "TOTAL"
          ],
          "type": "string"
        },
        "ignoreAdditionalDataOnValueRejected": {
          "type": "boolean",
          "x-omitempty": false
        },
        "isPublic": {
          "type": "boolean",
          "x-omitempty": false
        },
        "name": {
          "type": "string"
        },
        "tags": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "uniqueItems": true
        },
        "visibility": {
          "enum": [
            "SERVERONLY",
            "SHOWALL"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "UserGameProfiles": {
      "properties": {
        "gameProfiles": {
          "items": {
            "$ref": "#/definitions/GameProfilePublicInfo"
          },
          "type": "array"
        },
        "userId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "UserSlotConfigInfo": {
      "properties": {
        "maxSlotSize": {
          "format": "int32",
          "type": "integer"
        },
        "maxSlots": {
          "format": "int32",
          "type": "integer"
        },
        "namespace": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "UserStatCycleItemInfo": {
      "properties": {
        "additionalData": {
          "additionalProperties": {
            "type": "object"
          },
          "type": "object"
        },
        "createdAt": {
          "format": "date-time",
          "type": "string",
          "x-nullable": false
        },
        "cycleId": {
          "type": "string"
        },
        "cycleName": {
          "type": "string"
        },
        "cycleVersion": {
          "format": "int32",
          "type": "integer"
        },
        "namespace": {
          "type": "string"
        },
        "statCode": {
          "type": "string"
        },
        "statName": {
          "type": "string"
        },
        "tags": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "uniqueItems": true
        },
        "updatedAt": {
          "format": "date-time",
          "type": "string",
          "x-nullable": false
        },
        "userId": {
          "type": "string"
        },
        "value": {
          "format": "double",
          "type": "number"
        }
      },
      "required": [
        "createdAt",
        "cycleId",
        "cycleName",
        "cycleVersion",
        "namespace",
        "statCode",
        "statName",
        "updatedAt",
        "userId",
        "value"
      ],
      "type": "object"
    },
    "UserStatCycleItemPagingSlicedResult": {
      "properties": {
        "data": {
          "items": {
            "$ref": "#/definitions/UserStatCycleItemInfo"
          },
          "type": "array"
        },
        "paging": {
          "$ref": "#/definitions/Paging"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "UserStatItemInfo": {
      "properties": {
        "additionalData": {
          "additionalProperties": {
            "type": "object"
          },
          "type": "object"
        },
        "createdAt": {
          "format": "date-time",
          "type": "string",
          "x-nullable": false
        },
        "namespace": {
          "type": "string"
        },
        "statCode": {
          "type": "string"
        },
        "statName": {
          "type": "string"
        },
        "tags": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "uniqueItems": true
        },
        "updatedAt": {
          "format": "date-time",
          "type": "string",
          "x-nullable": false
        },
        "userId": {
          "type": "string"
        },
        "value": {
          "format": "double",
          "type": "number"
        }
      },
      "required": [
        "createdAt",
        "namespace",
        "statCode",
        "statName",
        "updatedAt",
        "userId",
        "value"
      ],
      "type": "object"
    },
    "UserStatItemPagingSlicedResult": {
      "properties": {
        "data": {
          "items": {
            "$ref": "#/definitions/UserStatItemInfo"
          },
          "type": "array"
        },
        "paging": {
          "$ref": "#/definitions/Paging"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "ValidationErrorEntity": {
      "properties": {
        "errorCode": {
          "description": "numeric error code",
          "format": "int32",
          "type": "integer"
        },
        "errorMessage": {
          "description": "error message",
          "type": "string"
        },
        "errors": {
          "items": {
            "$ref": "#/definitions/FieldValidationError"
          },
          "type": "array"
        }
      },
      "required": [
        "errorCode",
        "errorMessage"
      ],
      "type": "object"
    }
  },
  "x-version": {
    "buildBy": "Gradle 8.5",
    "buildDate": "2025-09-12T04:37:15+00:00",
    "buildID": "4.0.0",
    "buildJDK": "21.0.6 (Amazon.com Inc. 21.0.6+7-LTS)",
    "buildOS": "Linux amd64 5.10.240-238.959.amzn2.x86_64",
    "gitBranchName": "release-candidate",
    "gitHash": "a64125ea4d",
    "gitTag": "4.0.0",
    "name": "justice-social-service",
    "version": "4.0.0",
    "version-roles-seeding": "0.0.12"
  }
}